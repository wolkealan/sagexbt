{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satya\\\\Cabalprojects\\\\crypto_advisor\\\\frontend\\\\src\\\\components\\\\CryptoAnalyzerChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Send } from 'lucide-react';\n\n// Suggestions Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Suggestions = ({\n  onSuggestionSelect\n}) => {\n  const suggestions = [\"Should I buy Solana now?\", \"What's happening in the crypto market?\", \"Should I enter a long position on ETH?\", \"Is Bitcoin a good short right now?\", \"Should I sell SOL?\", \"Analyze Cardano's price movement\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-2 md:grid-cols-3 gap-3 p-4\",\n    children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-gray-100 hover:bg-gray-200 text-left p-3 rounded-lg text-sm transition-colors\",\n      onClick: () => onSuggestionSelect(suggestion),\n      children: suggestion\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// Message formatting helper\n_c = Suggestions;\nconst formatMessage = content => {\n  if (!content) return \"No content available\";\n\n  // Split by numbered sections with asterisks/numbers\n  const parts = content.split(/(\\d\\.\\s\\*\\*.*?\\*\\*:)/g);\n  if (parts.length > 1) {\n    return parts.map((part, index) => {\n      // Check if this is a section header\n      if (part.match(/\\d\\.\\s\\*\\*.*?\\*\\*:/)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold mt-2\",\n          children: part.replace(/\\*\\*/g, '')\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this);\n      }\n      // This is section content\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  // Check for Markdown-style bold text\n  if (content.includes('**')) {\n    return content.split('\\n').map((line, index) => {\n      // Replace bold markdown with styled spans\n      const processedLine = line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        dangerouslySetInnerHTML: {\n          __html: processedLine\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  // If no structured format detected, just return the content with line breaks\n  return content.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-1\",\n    children: line\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this));\n};\n\n// Main Chat Component\nconst CryptoAnalyzerChat = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Function to detect if query is about futures trading (long/short positions)\n  const isFuturesQuery = queryText => {\n    const futuresPatterns = [/\\blong position\\b/i, /\\bshort position\\b/i, /\\bgo long\\b/i, /\\bgo short\\b/i, /\\benter a long\\b/i, /\\benter a short\\b/i, /\\bfutures\\b/i, /\\bleveraged\\b/i, /\\blonging\\b/i, /\\bshorting\\b/i];\n    return futuresPatterns.some(pattern => pattern.test(queryText));\n  };\n\n  // Function to extract coin from message\n  const extractCoin = queryText => {\n    const coins = ['BTC', 'ETH', 'SOL', 'ADA', 'XRP', 'DOT', 'DOGE', 'AVAX', 'MATIC'];\n\n    // Check for exact matches\n    for (const coin of coins) {\n      if (queryText.toUpperCase().includes(coin)) {\n        return coin;\n      }\n    }\n\n    // Check for common names\n    const coinNames = {\n      'bitcoin': 'BTC',\n      'ethereum': 'ETH',\n      'solana': 'SOL',\n      'cardano': 'ADA',\n      'ripple': 'XRP',\n      'polkadot': 'DOT',\n      'dogecoin': 'DOGE',\n      'avalanche': 'AVAX',\n      'polygon': 'MATIC'\n    };\n    const queryLower = queryText.toLowerCase();\n    for (const [name, symbol] of Object.entries(coinNames)) {\n      if (queryLower.includes(name)) {\n        return symbol;\n      }\n    }\n\n    // Default to BTC if no coin detected\n    return 'BTC';\n  };\n\n  // Function to determine if query is about going long or short\n  const extractFuturesDirection = queryText => {\n    const queryLower = queryText.toLowerCase();\n\n    // Check for long patterns\n    if (/long|buy|bull/i.test(queryLower) && !/short|sell|bear/i.test(queryLower)) {\n      return 'long';\n    }\n\n    // Check for short patterns\n    if (/short|sell|bear/i.test(queryLower) && !/long|buy|bull/i.test(queryLower)) {\n      return 'short';\n    }\n\n    // Default to \"long\" if direction not clear\n    return 'long';\n  };\n  const handleSubmit = async e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    if (!query.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      type: 'user',\n      content: query,\n      timestamp: new Date().toLocaleString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n\n    // Determine if this is a futures trading query\n    const isFutures = isFuturesQuery(query);\n    let apiEndpoint, requestOptions, messageType;\n    if (isFutures) {\n      // Extract coin and direction for futures trading\n      const coin = extractCoin(query);\n      const direction = extractFuturesDirection(query);\n\n      // Create URL with query parameters\n      const params = new URLSearchParams({\n        action_type: 'futures',\n        position: direction,\n        // Add position parameter\n        force_refresh: 'true' // Force refresh to avoid caching issues\n      });\n      apiEndpoint = `/recommendation/${coin}?${params.toString()}`;\n      requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      messageType = direction === 'long' ? 'LONG' : 'SHORT';\n    } else {\n      // Standard analysis query\n      apiEndpoint = '/analyze';\n      requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: query,\n          context: {\n            risk_tolerance: \"medium\",\n            investment_horizon: \"long\",\n            portfolio: [\"ETH\", \"SOL\", \"ADA\"]\n          }\n        })\n      };\n      messageType = 'analysis';\n    }\n    setIsLoading(true);\n    setQuery('');\n    try {\n      console.log(\"Sending request to:\", apiEndpoint);\n      const response = await fetch(apiEndpoint, requestOptions);\n      if (!response.ok) {\n        throw new Error('Request failed');\n      }\n      const data = await response.json();\n      console.log(\"API Response:\", data);\n\n      // Format response based on endpoint type\n      let aiMessage;\n      if (isFutures) {\n        // Enhanced recommendation content formatting\n        const direction = extractFuturesDirection(query);\n        const directionText = direction === 'long' ? 'LONG' : 'SHORT';\n\n        // Custom summary based on direction\n        let summary;\n        if (data.action === 'BUY' && direction === 'long') {\n          summary = `ENTER LONG position for ${data.coin}`;\n        } else if (data.action === 'SELL' && direction === 'short') {\n          summary = `ENTER SHORT position for ${data.coin}`;\n        } else if (data.action === 'BUY' && direction === 'short') {\n          summary = `NOT RECOMMENDED to short ${data.coin} at this time`;\n        } else if (data.action === 'SELL' && direction === 'long') {\n          summary = `NOT RECOMMENDED to go long on ${data.coin} at this time`;\n        } else {\n          summary = `NEUTRAL outlook for ${data.coin} ${directionText} position`;\n        }\n\n        // Get the explanation - check all possible field names\n        const explanation = data.explanation || data.analysis || data.summary || \"No detailed analysis available.\";\n\n        // Format recommendation response\n        aiMessage = {\n          type: 'ai',\n          content: `**${data.action || 'NEUTRAL'}** - ${summary}\\n\\n${explanation}`,\n          coin: data.coin || extractCoin(query),\n          intent: messageType,\n          direction: direction,\n          action: data.action || 'NEUTRAL',\n          timestamp: new Date().toLocaleString()\n        };\n      } else {\n        // Format analysis response\n        aiMessage = {\n          type: 'ai',\n          content: data.response,\n          coin: data.detected_coin || 'Market',\n          intent: data.detected_intent || 'Analysis',\n          timestamp: new Date(data.timestamp * 1000).toLocaleString()\n        };\n      }\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        type: 'error',\n        content: 'Sorry, something went wrong. Please try again.',\n        timestamp: new Date().toLocaleString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen w-full bg-white shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-4 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-blue-600\",\n        children: \"CryptoSage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500\",\n        children: \"Powered by DeepSeek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto p-4 space-y-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-6xl mx-auto w-full\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(Suggestions, {\n          onSuggestionSelect: suggestion => {\n            setQuery(suggestion);\n            handleSubmit({\n              preventDefault: () => {}\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[85%] p-3 rounded-lg ${message.type === 'user' ? 'bg-blue-500 text-white' : message.type === 'error' ? 'bg-red-100 text-red-800' : message.intent === 'LONG' && message.action === 'BUY' ? 'bg-green-50 border border-green-200' : message.intent === 'SHORT' && message.action === 'SELL' ? 'bg-red-50 border border-red-200' : message.intent === 'LONG' || message.intent === 'SHORT' ? 'bg-yellow-50 border border-yellow-200' : 'bg-gray-100'}`,\n            children: [message.type === 'ai' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-sm font-semibold mb-1 ${message.intent === 'LONG' && message.action === 'BUY' ? 'text-green-600' : message.intent === 'SHORT' && message.action === 'SELL' ? 'text-red-600' : message.intent === 'LONG' || message.intent === 'SHORT' ? 'text-yellow-600' : 'text-blue-600'}`,\n              children: [message.coin, \" \", message.intent === 'LONG' || message.intent === 'SHORT' ? `${message.intent} Recommendation` : message.intent && message.intent !== 'general' ? message.intent.toUpperCase() : 'Analysis']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm whitespace-pre-wrap\",\n              children: message.type === 'ai' ? formatMessage(message.content) : message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-400 mt-2 text-right\",\n              children: message.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader w-8 h-8 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"p-4 border-t\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-6xl mx-auto w-full flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Ask about cryptocurrency markets or futures positions...\",\n          disabled: isLoading,\n          className: \"flex-grow p-3 bg-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading || !query.trim(),\n          className: \"bg-blue-600 text-white p-3 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoAnalyzerChat, \"1uitYtc+qfnMaxQ4XMHs3PNM0PA=\");\n_c2 = CryptoAnalyzerChat;\nexport default CryptoAnalyzerChat;\nvar _c, _c2;\n$RefreshReg$(_c, \"Suggestions\");\n$RefreshReg$(_c2, \"CryptoAnalyzerChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Send","jsxDEV","_jsxDEV","Suggestions","onSuggestionSelect","suggestions","className","children","map","suggestion","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","formatMessage","content","parts","split","length","part","match","replace","includes","line","processedLine","dangerouslySetInnerHTML","__html","CryptoAnalyzerChat","_s","query","setQuery","messages","setMessages","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","isFuturesQuery","queryText","futuresPatterns","some","pattern","test","extractCoin","coins","coin","toUpperCase","coinNames","queryLower","toLowerCase","name","symbol","Object","entries","extractFuturesDirection","handleSubmit","e","preventDefault","trim","userMessage","type","timestamp","Date","toLocaleString","prev","isFutures","apiEndpoint","requestOptions","messageType","direction","params","URLSearchParams","action_type","position","force_refresh","toString","method","headers","body","JSON","stringify","message","context","risk_tolerance","investment_horizon","portfolio","console","log","response","fetch","ok","Error","data","json","aiMessage","directionText","summary","action","explanation","analysis","intent","detected_coin","detected_intent","error","errorMessage","ref","onSubmit","value","onChange","target","placeholder","disabled","size","_c2","$RefreshReg$"],"sources":["C:/Users/satya/Cabalprojects/crypto_advisor/frontend/src/components/CryptoAnalyzerChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Send } from 'lucide-react';\r\n\r\n// Suggestions Component\r\nconst Suggestions = ({ onSuggestionSelect }) => {\r\n  const suggestions = [\r\n    \"Should I buy Solana now?\",\r\n    \"What's happening in the crypto market?\",\r\n    \"Should I enter a long position on ETH?\",\r\n    \"Is Bitcoin a good short right now?\",\r\n    \"Should I sell SOL?\",\r\n    \"Analyze Cardano's price movement\"\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 p-4\">\r\n      {suggestions.map((suggestion, index) => (\r\n        <button \r\n          key={index}\r\n          className=\"bg-gray-100 hover:bg-gray-200 text-left p-3 rounded-lg text-sm transition-colors\"\r\n          onClick={() => onSuggestionSelect(suggestion)}\r\n        >\r\n          {suggestion}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Message formatting helper\r\nconst formatMessage = (content) => {\r\n  if (!content) return \"No content available\";\r\n  \r\n  // Split by numbered sections with asterisks/numbers\r\n  const parts = content.split(/(\\d\\.\\s\\*\\*.*?\\*\\*:)/g);\r\n  \r\n  if (parts.length > 1) {\r\n    return parts.map((part, index) => {\r\n      // Check if this is a section header\r\n      if (part.match(/\\d\\.\\s\\*\\*.*?\\*\\*:/)) {\r\n        return <div key={index} className=\"font-semibold mt-2\">{part.replace(/\\*\\*/g, '')}</div>;\r\n      }\r\n      // This is section content\r\n      return <div key={index} className=\"mb-2\">{part}</div>;\r\n    });\r\n  }\r\n  \r\n  // Check for Markdown-style bold text\r\n  if (content.includes('**')) {\r\n    return content.split('\\n').map((line, index) => {\r\n      // Replace bold markdown with styled spans\r\n      const processedLine = line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n      return (\r\n        <div \r\n          key={index} \r\n          className=\"mb-1\" \r\n          dangerouslySetInnerHTML={{ __html: processedLine }}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  \r\n  // If no structured format detected, just return the content with line breaks\r\n  return content.split('\\n').map((line, index) => (\r\n    <div key={index} className=\"mb-1\">{line}</div>\r\n  ));\r\n};\r\n\r\n// Main Chat Component\r\nconst CryptoAnalyzerChat = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Function to detect if query is about futures trading (long/short positions)\r\n  const isFuturesQuery = (queryText) => {\r\n    const futuresPatterns = [\r\n      /\\blong position\\b/i,\r\n      /\\bshort position\\b/i,\r\n      /\\bgo long\\b/i,\r\n      /\\bgo short\\b/i,\r\n      /\\benter a long\\b/i,\r\n      /\\benter a short\\b/i,\r\n      /\\bfutures\\b/i,\r\n      /\\bleveraged\\b/i,\r\n      /\\blonging\\b/i,\r\n      /\\bshorting\\b/i\r\n    ];\r\n    \r\n    return futuresPatterns.some(pattern => pattern.test(queryText));\r\n  };\r\n\r\n  // Function to extract coin from message\r\n  const extractCoin = (queryText) => {\r\n    const coins = ['BTC', 'ETH', 'SOL', 'ADA', 'XRP', 'DOT', 'DOGE', 'AVAX', 'MATIC'];\r\n    \r\n    // Check for exact matches\r\n    for (const coin of coins) {\r\n      if (queryText.toUpperCase().includes(coin)) {\r\n        return coin;\r\n      }\r\n    }\r\n    \r\n    // Check for common names\r\n    const coinNames = {\r\n      'bitcoin': 'BTC',\r\n      'ethereum': 'ETH',\r\n      'solana': 'SOL',\r\n      'cardano': 'ADA',\r\n      'ripple': 'XRP',\r\n      'polkadot': 'DOT',\r\n      'dogecoin': 'DOGE',\r\n      'avalanche': 'AVAX',\r\n      'polygon': 'MATIC'\r\n    };\r\n    \r\n    const queryLower = queryText.toLowerCase();\r\n    for (const [name, symbol] of Object.entries(coinNames)) {\r\n      if (queryLower.includes(name)) {\r\n        return symbol;\r\n      }\r\n    }\r\n    \r\n    // Default to BTC if no coin detected\r\n    return 'BTC';\r\n  };\r\n\r\n  // Function to determine if query is about going long or short\r\n  const extractFuturesDirection = (queryText) => {\r\n    const queryLower = queryText.toLowerCase();\r\n    \r\n    // Check for long patterns\r\n    if (/long|buy|bull/i.test(queryLower) && !/short|sell|bear/i.test(queryLower)) {\r\n      return 'long';\r\n    }\r\n    \r\n    // Check for short patterns\r\n    if (/short|sell|bear/i.test(queryLower) && !/long|buy|bull/i.test(queryLower)) {\r\n      return 'short';\r\n    }\r\n    \r\n    // Default to \"long\" if direction not clear\r\n    return 'long';\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e?.preventDefault();\r\n    \r\n    if (!query.trim()) return;\r\n\r\n    // Add user message\r\n    const userMessage = { \r\n      type: 'user', \r\n      content: query,\r\n      timestamp: new Date().toLocaleString()\r\n    };\r\n    setMessages(prev => [...prev, userMessage]);\r\n\r\n    // Determine if this is a futures trading query\r\n    const isFutures = isFuturesQuery(query);\r\n    let apiEndpoint, requestOptions, messageType;\r\n    \r\n    if (isFutures) {\r\n      // Extract coin and direction for futures trading\r\n      const coin = extractCoin(query);\r\n      const direction = extractFuturesDirection(query);\r\n      \r\n      // Create URL with query parameters\r\n      const params = new URLSearchParams({\r\n        action_type: 'futures',\r\n        position: direction, // Add position parameter\r\n        force_refresh: 'true' // Force refresh to avoid caching issues\r\n      });\r\n      \r\n      apiEndpoint = `/recommendation/${coin}?${params.toString()}`;\r\n      \r\n      requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      \r\n      messageType = direction === 'long' ? 'LONG' : 'SHORT';\r\n    } else {\r\n      // Standard analysis query\r\n      apiEndpoint = '/analyze';\r\n      requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          message: query,\r\n          context: {\r\n            risk_tolerance: \"medium\",\r\n            investment_horizon: \"long\",\r\n            portfolio: [\"ETH\", \"SOL\", \"ADA\"]\r\n          }\r\n        })\r\n      };\r\n      messageType = 'analysis';\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setQuery('');\r\n\r\n    try {\r\n      console.log(\"Sending request to:\", apiEndpoint);\r\n      const response = await fetch(apiEndpoint, requestOptions);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Request failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"API Response:\", data);\r\n\r\n      // Format response based on endpoint type\r\n      let aiMessage;\r\n      \r\n      if (isFutures) {\r\n        // Enhanced recommendation content formatting\r\n        const direction = extractFuturesDirection(query);\r\n        const directionText = direction === 'long' ? 'LONG' : 'SHORT';\r\n        \r\n        // Custom summary based on direction\r\n        let summary;\r\n        if (data.action === 'BUY' && direction === 'long') {\r\n          summary = `ENTER LONG position for ${data.coin}`;\r\n        } else if (data.action === 'SELL' && direction === 'short') {\r\n          summary = `ENTER SHORT position for ${data.coin}`;\r\n        } else if (data.action === 'BUY' && direction === 'short') {\r\n          summary = `NOT RECOMMENDED to short ${data.coin} at this time`;\r\n        } else if (data.action === 'SELL' && direction === 'long') {\r\n          summary = `NOT RECOMMENDED to go long on ${data.coin} at this time`;\r\n        } else {\r\n          summary = `NEUTRAL outlook for ${data.coin} ${directionText} position`;\r\n        }\r\n        \r\n        // Get the explanation - check all possible field names\r\n        const explanation = data.explanation || data.analysis || data.summary || \"No detailed analysis available.\";\r\n        \r\n        // Format recommendation response\r\n        aiMessage = {\r\n          type: 'ai',\r\n          content: `**${data.action || 'NEUTRAL'}** - ${summary}\\n\\n${explanation}`,\r\n          coin: data.coin || extractCoin(query),\r\n          intent: messageType,\r\n          direction: direction,\r\n          action: data.action || 'NEUTRAL',\r\n          timestamp: new Date().toLocaleString()\r\n        };\r\n      } else {\r\n        // Format analysis response\r\n        aiMessage = {\r\n          type: 'ai',\r\n          content: data.response,\r\n          coin: data.detected_coin || 'Market',\r\n          intent: data.detected_intent || 'Analysis',\r\n          timestamp: new Date(data.timestamp * 1000).toLocaleString()\r\n        };\r\n      }\r\n      \r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      const errorMessage = {\r\n        type: 'error',\r\n        content: 'Sorry, something went wrong. Please try again.',\r\n        timestamp: new Date().toLocaleString()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen w-full bg-white shadow-lg\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center p-4 border-b\">\r\n        <div className=\"text-2xl font-bold text-blue-600\">CryptoSage</div>\r\n        <div className=\"text-sm text-gray-500\">Powered by DeepSeek</div>\r\n      </div>\r\n\r\n      {/* Messages Area */}\r\n      <div className=\"flex-grow overflow-y-auto p-4 space-y-4\">\r\n        <div className=\"max-w-6xl mx-auto w-full\">\r\n          {messages.length === 0 ? (\r\n            <Suggestions onSuggestionSelect={(suggestion) => {\r\n              setQuery(suggestion);\r\n              handleSubmit({ preventDefault: () => {} });\r\n            }} />\r\n          ) : (\r\n            messages.map((message, index) => (\r\n              <div \r\n                key={index} \r\n                className={`flex ${\r\n                  message.type === 'user' \r\n                    ? 'justify-end' \r\n                    : 'justify-start'\r\n                }`}\r\n              >\r\n                <div \r\n                  className={`max-w-[85%] p-3 rounded-lg ${\r\n                    message.type === 'user'\r\n                      ? 'bg-blue-500 text-white'\r\n                      : message.type === 'error'\r\n                      ? 'bg-red-100 text-red-800'\r\n                      : message.intent === 'LONG' && message.action === 'BUY'\r\n                      ? 'bg-green-50 border border-green-200'\r\n                      : message.intent === 'SHORT' && message.action === 'SELL'\r\n                      ? 'bg-red-50 border border-red-200'\r\n                      : message.intent === 'LONG' || message.intent === 'SHORT'\r\n                      ? 'bg-yellow-50 border border-yellow-200'\r\n                      : 'bg-gray-100'\r\n                  }`}\r\n                >\r\n                  {message.type === 'ai' && (\r\n                    <div className={`text-sm font-semibold mb-1 ${\r\n                      message.intent === 'LONG' && message.action === 'BUY'\r\n                        ? 'text-green-600' \r\n                        : message.intent === 'SHORT' && message.action === 'SELL'\r\n                        ? 'text-red-600'\r\n                        : message.intent === 'LONG' || message.intent === 'SHORT'\r\n                        ? 'text-yellow-600'\r\n                        : 'text-blue-600'\r\n                    }`}>\r\n                      {message.coin} {message.intent === 'LONG' || message.intent === 'SHORT' \r\n                        ? `${message.intent} Recommendation` \r\n                        : message.intent && message.intent !== 'general' \r\n                        ? message.intent.toUpperCase() \r\n                        : 'Analysis'}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div className=\"text-sm whitespace-pre-wrap\">\r\n                    {message.type === 'ai' \r\n                      ? formatMessage(message.content) \r\n                      : message.content}\r\n                  </div>\r\n                  \r\n                  <div className=\"text-xs text-gray-400 mt-2 text-right\">\r\n                    {message.timestamp}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n          \r\n          {/* Loading indicator */}\r\n          {isLoading && (\r\n            <div className=\"flex justify-center items-center p-4\">\r\n              <div className=\"loader w-8 h-8 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin\"></div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <form \r\n        onSubmit={handleSubmit} \r\n        className=\"p-4 border-t\"\r\n      >\r\n        <div className=\"max-w-6xl mx-auto w-full flex items-center space-x-2\">\r\n          <input \r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder=\"Ask about cryptocurrency markets or futures positions...\"\r\n            disabled={isLoading}\r\n            className=\"flex-grow p-3 bg-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          />\r\n          <button \r\n            type=\"submit\" \r\n            disabled={isLoading || !query.trim()}\r\n            className=\"bg-blue-600 text-white p-3 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            <Send size={20} />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoAnalyzerChat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,cAAc;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAC9C,MAAMC,WAAW,GAAG,CAClB,0BAA0B,EAC1B,wCAAwC,EACxC,wCAAwC,EACxC,oCAAoC,EACpC,oBAAoB,EACpB,kCAAkC,CACnC;EAED,oBACEH,OAAA;IAAKI,SAAS,EAAC,2CAA2C;IAAAC,QAAA,EACvDF,WAAW,CAACG,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjCR,OAAA;MAEEI,SAAS,EAAC,kFAAkF;MAC5FK,OAAO,EAAEA,CAAA,KAAMP,kBAAkB,CAACK,UAAU,CAAE;MAAAF,QAAA,EAE7CE;IAAU,GAJNC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKJ,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GAzBMb,WAAW;AA0BjB,MAAMc,aAAa,GAAIC,OAAO,IAAK;EACjC,IAAI,CAACA,OAAO,EAAE,OAAO,sBAAsB;;EAE3C;EACA,MAAMC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,uBAAuB,CAAC;EAEpD,IAAID,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;IACpB,OAAOF,KAAK,CAACX,GAAG,CAAC,CAACc,IAAI,EAAEZ,KAAK,KAAK;MAChC;MACA,IAAIY,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC,EAAE;QACpC,oBAAOrB,OAAA;UAAiBI,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAEe,IAAI,CAACE,OAAO,CAAC,OAAO,EAAE,EAAE;QAAC,GAAhEd,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiE,CAAC;MAC1F;MACA;MACA,oBAAOb,OAAA;QAAiBI,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEe;MAAI,GAA7BZ,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8B,CAAC;IACvD,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIG,OAAO,CAACO,QAAQ,CAAC,IAAI,CAAC,EAAE;IAC1B,OAAOP,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC,CAACZ,GAAG,CAAC,CAACkB,IAAI,EAAEhB,KAAK,KAAK;MAC9C;MACA,MAAMiB,aAAa,GAAGD,IAAI,CAACF,OAAO,CAAC,gBAAgB,EAAE,qBAAqB,CAAC;MAC3E,oBACEtB,OAAA;QAEEI,SAAS,EAAC,MAAM;QAChBsB,uBAAuB,EAAE;UAAEC,MAAM,EAAEF;QAAc;MAAE,GAF9CjB,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CAAC;IAEN,CAAC,CAAC;EACJ;;EAEA;EACA,OAAOG,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC,CAACZ,GAAG,CAAC,CAACkB,IAAI,EAAEhB,KAAK,kBACzCR,OAAA;IAAiBI,SAAS,EAAC,MAAM;IAAAC,QAAA,EAAEmB;EAAI,GAA7BhB,KAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA8B,CAC9C,CAAC;AACJ,CAAC;;AAED;AACA,MAAMe,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMyC,cAAc,GAAGvC,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMwC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED7C,SAAS,CAAC,MAAM;IACdyC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMU,cAAc,GAAIC,SAAS,IAAK;IACpC,MAAMC,eAAe,GAAG,CACtB,oBAAoB,EACpB,qBAAqB,EACrB,cAAc,EACd,eAAe,EACf,mBAAmB,EACnB,oBAAoB,EACpB,cAAc,EACd,gBAAgB,EAChB,cAAc,EACd,eAAe,CAChB;IAED,OAAOA,eAAe,CAACC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACJ,SAAS,CAAC,CAAC;EACjE,CAAC;;EAED;EACA,MAAMK,WAAW,GAAIL,SAAS,IAAK;IACjC,MAAMM,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;;IAEjF;IACA,KAAK,MAAMC,IAAI,IAAID,KAAK,EAAE;MACxB,IAAIN,SAAS,CAACQ,WAAW,CAAC,CAAC,CAAC5B,QAAQ,CAAC2B,IAAI,CAAC,EAAE;QAC1C,OAAOA,IAAI;MACb;IACF;;IAEA;IACA,MAAME,SAAS,GAAG;MAChB,SAAS,EAAE,KAAK;MAChB,UAAU,EAAE,KAAK;MACjB,QAAQ,EAAE,KAAK;MACf,SAAS,EAAE,KAAK;MAChB,QAAQ,EAAE,KAAK;MACf,UAAU,EAAE,KAAK;MACjB,UAAU,EAAE,MAAM;MAClB,WAAW,EAAE,MAAM;MACnB,SAAS,EAAE;IACb,CAAC;IAED,MAAMC,UAAU,GAAGV,SAAS,CAACW,WAAW,CAAC,CAAC;IAC1C,KAAK,MAAM,CAACC,IAAI,EAAEC,MAAM,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACN,SAAS,CAAC,EAAE;MACtD,IAAIC,UAAU,CAAC9B,QAAQ,CAACgC,IAAI,CAAC,EAAE;QAC7B,OAAOC,MAAM;MACf;IACF;;IAEA;IACA,OAAO,KAAK;EACd,CAAC;;EAED;EACA,MAAMG,uBAAuB,GAAIhB,SAAS,IAAK;IAC7C,MAAMU,UAAU,GAAGV,SAAS,CAACW,WAAW,CAAC,CAAC;;IAE1C;IACA,IAAI,gBAAgB,CAACP,IAAI,CAACM,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAACN,IAAI,CAACM,UAAU,CAAC,EAAE;MAC7E,OAAO,MAAM;IACf;;IAEA;IACA,IAAI,kBAAkB,CAACN,IAAI,CAACM,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAACN,IAAI,CAACM,UAAU,CAAC,EAAE;MAC7E,OAAO,OAAO;IAChB;;IAEA;IACA,OAAO,MAAM;EACf,CAAC;EAED,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC,cAAc,CAAC,CAAC;IAEnB,IAAI,CAAChC,KAAK,CAACiC,IAAI,CAAC,CAAC,EAAE;;IAEnB;IACA,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAE,MAAM;MACZjD,OAAO,EAAEc,KAAK;MACdoC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;IACvC,CAAC;IACDnC,WAAW,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,WAAW,CAAC,CAAC;;IAE3C;IACA,MAAMM,SAAS,GAAG5B,cAAc,CAACZ,KAAK,CAAC;IACvC,IAAIyC,WAAW,EAAEC,cAAc,EAAEC,WAAW;IAE5C,IAAIH,SAAS,EAAE;MACb;MACA,MAAMpB,IAAI,GAAGF,WAAW,CAAClB,KAAK,CAAC;MAC/B,MAAM4C,SAAS,GAAGf,uBAAuB,CAAC7B,KAAK,CAAC;;MAEhD;MACA,MAAM6C,MAAM,GAAG,IAAIC,eAAe,CAAC;QACjCC,WAAW,EAAE,SAAS;QACtBC,QAAQ,EAAEJ,SAAS;QAAE;QACrBK,aAAa,EAAE,MAAM,CAAC;MACxB,CAAC,CAAC;MAEFR,WAAW,GAAG,mBAAmBrB,IAAI,IAAIyB,MAAM,CAACK,QAAQ,CAAC,CAAC,EAAE;MAE5DR,cAAc,GAAG;QACfS,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;MAEDT,WAAW,GAAGC,SAAS,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO;IACvD,CAAC,MAAM;MACL;MACAH,WAAW,GAAG,UAAU;MACxBC,cAAc,GAAG;QACfS,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAExD,KAAK;UACdyD,OAAO,EAAE;YACPC,cAAc,EAAE,QAAQ;YACxBC,kBAAkB,EAAE,MAAM;YAC1BC,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK;UACjC;QACF,CAAC;MACH,CAAC;MACDjB,WAAW,GAAG,UAAU;IAC1B;IAEAtC,YAAY,CAAC,IAAI,CAAC;IAClBJ,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF4D,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAErB,WAAW,CAAC;MAC/C,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAACvB,WAAW,EAAEC,cAAc,CAAC;MAEzD,IAAI,CAACqB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEK,IAAI,CAAC;;MAElC;MACA,IAAIE,SAAS;MAEb,IAAI7B,SAAS,EAAE;QACb;QACA,MAAMI,SAAS,GAAGf,uBAAuB,CAAC7B,KAAK,CAAC;QAChD,MAAMsE,aAAa,GAAG1B,SAAS,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO;;QAE7D;QACA,IAAI2B,OAAO;QACX,IAAIJ,IAAI,CAACK,MAAM,KAAK,KAAK,IAAI5B,SAAS,KAAK,MAAM,EAAE;UACjD2B,OAAO,GAAG,2BAA2BJ,IAAI,CAAC/C,IAAI,EAAE;QAClD,CAAC,MAAM,IAAI+C,IAAI,CAACK,MAAM,KAAK,MAAM,IAAI5B,SAAS,KAAK,OAAO,EAAE;UAC1D2B,OAAO,GAAG,4BAA4BJ,IAAI,CAAC/C,IAAI,EAAE;QACnD,CAAC,MAAM,IAAI+C,IAAI,CAACK,MAAM,KAAK,KAAK,IAAI5B,SAAS,KAAK,OAAO,EAAE;UACzD2B,OAAO,GAAG,4BAA4BJ,IAAI,CAAC/C,IAAI,eAAe;QAChE,CAAC,MAAM,IAAI+C,IAAI,CAACK,MAAM,KAAK,MAAM,IAAI5B,SAAS,KAAK,MAAM,EAAE;UACzD2B,OAAO,GAAG,iCAAiCJ,IAAI,CAAC/C,IAAI,eAAe;QACrE,CAAC,MAAM;UACLmD,OAAO,GAAG,uBAAuBJ,IAAI,CAAC/C,IAAI,IAAIkD,aAAa,WAAW;QACxE;;QAEA;QACA,MAAMG,WAAW,GAAGN,IAAI,CAACM,WAAW,IAAIN,IAAI,CAACO,QAAQ,IAAIP,IAAI,CAACI,OAAO,IAAI,iCAAiC;;QAE1G;QACAF,SAAS,GAAG;UACVlC,IAAI,EAAE,IAAI;UACVjD,OAAO,EAAE,KAAKiF,IAAI,CAACK,MAAM,IAAI,SAAS,QAAQD,OAAO,OAAOE,WAAW,EAAE;UACzErD,IAAI,EAAE+C,IAAI,CAAC/C,IAAI,IAAIF,WAAW,CAAClB,KAAK,CAAC;UACrC2E,MAAM,EAAEhC,WAAW;UACnBC,SAAS,EAAEA,SAAS;UACpB4B,MAAM,EAAEL,IAAI,CAACK,MAAM,IAAI,SAAS;UAChCpC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;QACvC,CAAC;MACH,CAAC,MAAM;QACL;QACA+B,SAAS,GAAG;UACVlC,IAAI,EAAE,IAAI;UACVjD,OAAO,EAAEiF,IAAI,CAACJ,QAAQ;UACtB3C,IAAI,EAAE+C,IAAI,CAACS,aAAa,IAAI,QAAQ;UACpCD,MAAM,EAAER,IAAI,CAACU,eAAe,IAAI,UAAU;UAC1CzC,SAAS,EAAE,IAAIC,IAAI,CAAC8B,IAAI,CAAC/B,SAAS,GAAG,IAAI,CAAC,CAACE,cAAc,CAAC;QAC5D,CAAC;MACH;MAEAnC,WAAW,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE8B,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdjB,OAAO,CAACiB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,MAAMC,YAAY,GAAG;QACnB5C,IAAI,EAAE,OAAO;QACbjD,OAAO,EAAE,gDAAgD;QACzDkD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;MACvC,CAAC;MACDnC,WAAW,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEwC,YAAY,CAAC,CAAC;IAC9C,CAAC,SAAS;MACR1E,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEnC,OAAA;IAAKI,SAAS,EAAC,kDAAkD;IAAAC,QAAA,gBAE/DL,OAAA;MAAKI,SAAS,EAAC,gDAAgD;MAAAC,QAAA,gBAC7DL,OAAA;QAAKI,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClEb,OAAA;QAAKI,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAmB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eAGNb,OAAA;MAAKI,SAAS,EAAC,yCAAyC;MAAAC,QAAA,eACtDL,OAAA;QAAKI,SAAS,EAAC,0BAA0B;QAAAC,QAAA,GACtC2B,QAAQ,CAACb,MAAM,KAAK,CAAC,gBACpBnB,OAAA,CAACC,WAAW;UAACC,kBAAkB,EAAGK,UAAU,IAAK;YAC/CwB,QAAQ,CAACxB,UAAU,CAAC;YACpBqD,YAAY,CAAC;cAAEE,cAAc,EAAEA,CAAA,KAAM,CAAC;YAAE,CAAC,CAAC;UAC5C;QAAE;UAAApD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAELmB,QAAQ,CAAC1B,GAAG,CAAC,CAACgF,OAAO,EAAE9E,KAAK,kBAC1BR,OAAA;UAEEI,SAAS,EAAE,QACTkF,OAAO,CAACrB,IAAI,KAAK,MAAM,GACnB,aAAa,GACb,eAAe,EAClB;UAAA5D,QAAA,eAEHL,OAAA;YACEI,SAAS,EAAE,8BACTkF,OAAO,CAACrB,IAAI,KAAK,MAAM,GACnB,wBAAwB,GACxBqB,OAAO,CAACrB,IAAI,KAAK,OAAO,GACxB,yBAAyB,GACzBqB,OAAO,CAACmB,MAAM,KAAK,MAAM,IAAInB,OAAO,CAACgB,MAAM,KAAK,KAAK,GACrD,qCAAqC,GACrChB,OAAO,CAACmB,MAAM,KAAK,OAAO,IAAInB,OAAO,CAACgB,MAAM,KAAK,MAAM,GACvD,iCAAiC,GACjChB,OAAO,CAACmB,MAAM,KAAK,MAAM,IAAInB,OAAO,CAACmB,MAAM,KAAK,OAAO,GACvD,uCAAuC,GACvC,aAAa,EAChB;YAAApG,QAAA,GAEFiF,OAAO,CAACrB,IAAI,KAAK,IAAI,iBACpBjE,OAAA;cAAKI,SAAS,EAAE,8BACdkF,OAAO,CAACmB,MAAM,KAAK,MAAM,IAAInB,OAAO,CAACgB,MAAM,KAAK,KAAK,GACjD,gBAAgB,GAChBhB,OAAO,CAACmB,MAAM,KAAK,OAAO,IAAInB,OAAO,CAACgB,MAAM,KAAK,MAAM,GACvD,cAAc,GACdhB,OAAO,CAACmB,MAAM,KAAK,MAAM,IAAInB,OAAO,CAACmB,MAAM,KAAK,OAAO,GACvD,iBAAiB,GACjB,eAAe,EAClB;cAAApG,QAAA,GACAiF,OAAO,CAACpC,IAAI,EAAC,GAAC,EAACoC,OAAO,CAACmB,MAAM,KAAK,MAAM,IAAInB,OAAO,CAACmB,MAAM,KAAK,OAAO,GACnE,GAAGnB,OAAO,CAACmB,MAAM,iBAAiB,GAClCnB,OAAO,CAACmB,MAAM,IAAInB,OAAO,CAACmB,MAAM,KAAK,SAAS,GAC9CnB,OAAO,CAACmB,MAAM,CAACtD,WAAW,CAAC,CAAC,GAC5B,UAAU;YAAA;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CACN,eAEDb,OAAA;cAAKI,SAAS,EAAC,6BAA6B;cAAAC,QAAA,EACzCiF,OAAO,CAACrB,IAAI,KAAK,IAAI,GAClBlD,aAAa,CAACuE,OAAO,CAACtE,OAAO,CAAC,GAC9BsE,OAAO,CAACtE;YAAO;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,eAENb,OAAA;cAAKI,SAAS,EAAC,uCAAuC;cAAAC,QAAA,EACnDiF,OAAO,CAACpB;YAAS;cAAAxD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAjDDL,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkDP,CACN,CACF,EAGAqB,SAAS,iBACRlC,OAAA;UAAKI,SAAS,EAAC,sCAAsC;UAAAC,QAAA,eACnDL,OAAA;YAAKI,SAAS,EAAC;UAAqF;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxG,CACN,eAEDb,OAAA;UAAK8G,GAAG,EAAE1E;QAAe;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNb,OAAA;MACE+G,QAAQ,EAAEnD,YAAa;MACvBxD,SAAS,EAAC,cAAc;MAAAC,QAAA,eAExBL,OAAA;QAAKI,SAAS,EAAC,sDAAsD;QAAAC,QAAA,gBACnEL,OAAA;UACEiE,IAAI,EAAC,MAAM;UACX+C,KAAK,EAAElF,KAAM;UACbmF,QAAQ,EAAGpD,CAAC,IAAK9B,QAAQ,CAAC8B,CAAC,CAACqD,MAAM,CAACF,KAAK,CAAE;UAC1CG,WAAW,EAAC,0DAA0D;UACtEC,QAAQ,EAAElF,SAAU;UACpB9B,SAAS,EAAC;QAA0F;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrG,CAAC,eACFb,OAAA;UACEiE,IAAI,EAAC,QAAQ;UACbmD,QAAQ,EAAElF,SAAS,IAAI,CAACJ,KAAK,CAACiC,IAAI,CAAC,CAAE;UACrC3D,SAAS,EAAC,+FAA+F;UAAAC,QAAA,eAEzGL,OAAA,CAACF,IAAI;YAACuH,IAAI,EAAE;UAAG;YAAA3G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACgB,EAAA,CAvUID,kBAAkB;AAAA0F,GAAA,GAAlB1F,kBAAkB;AAyUxB,eAAeA,kBAAkB;AAAC,IAAAd,EAAA,EAAAwG,GAAA;AAAAC,YAAA,CAAAzG,EAAA;AAAAyG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}