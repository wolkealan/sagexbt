{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satya\\\\Cabalprojects\\\\crypto_advisor\\\\frontend\\\\src\\\\components\\\\CryptoAnalyzerChat.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Send, Settings } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COIN_NAME_MAPPING = {\n  // Major Cryptocurrencies\n  \"bitcoin\": \"BTC\",\n  \"ethereum\": \"ETH\",\n  \"binance coin\": \"BNB\",\n  \"bnb\": \"BNB\",\n  \"solana\": \"SOL\",\n  \"ripple\": \"XRP\",\n  \"xrp\": \"XRP\",\n  \"cardano\": \"ADA\",\n  \"dogecoin\": \"DOGE\",\n  \"doge\": \"DOGE\",\n  \"shiba inu\": \"SHIB\",\n  \"shib\": \"SHIB\",\n  \"polkadot\": \"DOT\",\n  \"polygon\": \"MATIC\",\n  \"avalanche\": \"AVAX\",\n  \"chainlink\": \"LINK\",\n  \"uniswap\": \"UNI\",\n  \"litecoin\": \"LTC\",\n  \"cosmos\": \"ATOM\",\n  \"toncoin\": \"TON\",\n  \"ton\": \"TON\",\n  \"near protocol\": \"NEAR\",\n  \"near\": \"NEAR\",\n  \"internet computer\": \"ICP\",\n  \"aptos\": \"APT\",\n  \"bitcoin cash\": \"BCH\",\n  // Layer-1 & Layer-2 Solutions\n  \"fantom\": \"FTM\",\n  \"algorand\": \"ALGO\",\n  \"optimism\": \"OP\",\n  \"arbitrum\": \"ARB\",\n  \"stacks\": \"STX\",\n  \"hedera\": \"HBAR\",\n  \"hbar\": \"HBAR\",\n  \"ethereum classic\": \"ETC\",\n  \"flow\": \"FLOW\",\n  \"multiversx\": \"EGLD\",\n  \"elrond\": \"EGLD\",\n  \"harmony\": \"ONE\",\n  \"celo\": \"CELO\",\n  \"kava\": \"KAVA\",\n  \"klaytn\": \"KLAY\",\n  \"zilliqa\": \"ZIL\",\n  \"kaspa\": \"KAS\",\n  \"sei network\": \"SEI\",\n  \"sei\": \"SEI\",\n  \"sui\": \"SUI\",\n  \"tron\": \"TRX\",\n  \"immutable x\": \"IMX\",\n  \"immutable\": \"IMX\",\n  \"astar\": \"ASTR\",\n  // DeFi Tokens\n  \"maker\": \"MKR\",\n  \"aave\": \"AAVE\",\n  \"curve\": \"CRV\",\n  \"pancakeswap\": \"CAKE\",\n  \"cake\": \"CAKE\",\n  \"compound\": \"COMP\",\n  \"synthetix\": \"SNX\",\n  \"1inch\": \"1INCH\",\n  \"yearn.finance\": \"YFI\",\n  \"yearn\": \"YFI\",\n  \"sushiswap\": \"SUSHI\",\n  \"sushi\": \"SUSHI\",\n  \"convex finance\": \"CVX\",\n  \"convex\": \"CVX\",\n  \"lido dao\": \"LDO\",\n  \"lido\": \"LDO\",\n  \"balancer\": \"BAL\",\n  \"dydx\": \"DYDX\",\n  \"quant\": \"QNT\",\n  \"the graph\": \"GRT\",\n  \"graph\": \"GRT\",\n  \"vechain\": \"VET\",\n  \"injective\": \"INJ\",\n  // Stablecoins\n  \"tether\": \"USDT\",\n  \"usd coin\": \"USDC\",\n  \"binance usd\": \"BUSD\",\n  \"dai\": \"DAI\",\n  \"trueusd\": \"TUSD\",\n  \"first digital usd\": \"FDUSD\",\n  // Gaming & Metaverse\n  \"the sandbox\": \"SAND\",\n  \"sandbox\": \"SAND\",\n  \"decentraland\": \"MANA\",\n  \"axie infinity\": \"AXS\",\n  \"axie\": \"AXS\",\n  \"enjin coin\": \"ENJ\",\n  \"enjin\": \"ENJ\",\n  \"gala games\": \"GALA\",\n  \"gala\": \"GALA\",\n  \"illuvium\": \"ILV\",\n  \"blur\": \"BLUR\",\n  \"render\": \"RNDR\",\n  \"chiliz\": \"CHZ\",\n  \"dusk network\": \"DUSK\",\n  \"dusk\": \"DUSK\",\n  \"stepn\": \"GMT\",\n  \"apecoin\": \"APE\",\n  \"ape\": \"APE\",\n  \"thorchain\": \"RUNE\",\n  // Exchange Tokens\n  \"crypto.com coin\": \"CRO\",\n  \"cronos\": \"CRO\",\n  \"okb\": \"OKB\",\n  \"kucoin token\": \"KCS\",\n  \"kucoin\": \"KCS\",\n  \"gatetoken\": \"GT\",\n  \"ftx token\": \"FTT\",\n  \"huobi token\": \"HT\",\n  // Privacy Coins\n  \"monero\": \"XMR\",\n  \"zcash\": \"ZEC\",\n  \"dash\": \"DASH\",\n  \"oasis network\": \"ROSE\",\n  \"oasis\": \"ROSE\",\n  // Storage & Computing\n  \"filecoin\": \"FIL\",\n  \"arweave\": \"AR\",\n  // Newer & Trending Tokens\n  \"pyth network\": \"PYTH\",\n  \"pyth\": \"PYTH\",\n  \"jito\": \"JTO\",\n  \"bonk\": \"BONK\",\n  \"book of meme\": \"BOME\",\n  \"bome\": \"BOME\",\n  \"pepe\": \"PEPE\",\n  \"dogwifhat\": \"WIF\",\n  \"wif\": \"WIF\",\n  \"jupiter\": \"JUP\",\n  \"cyberconnect\": \"CYBER\",\n  \"cyber\": \"CYBER\",\n  \"celestia\": \"TIA\",\n  \"fetch.ai\": \"FET\",\n  \"fetch\": \"FET\",\n  \"ordinals\": \"ORDI\",\n  \"starknet\": \"STRK\",\n  \"beam\": \"BEAM\",\n  \"blast\": \"BLAST\",\n  \"mousepad\": \"MOUSE\",\n  \"singularitynet\": \"AGIX\",\n  \"space id\": \"ID\",\n  \"ace\": \"ACE\",\n  // Other Significant Coins\n  \"airswap\": \"AST\",\n  \"ast\": \"AST\",\n  \"tezos\": \"XTZ\",\n  \"eos\": \"EOS\",\n  \"theta network\": \"THETA\",\n  \"theta\": \"THETA\",\n  \"neo\": \"NEO\",\n  \"iota\": \"IOTA\",\n  \"stellar\": \"XLM\",\n  \"0x\": \"ZRX\",\n  \"basic attention token\": \"BAT\",\n  \"basic attention\": \"BAT\",\n  \"bat\": \"BAT\",\n  \"ravencoin\": \"RVN\",\n  \"icon\": \"ICX\",\n  \"ontology\": \"ONT\",\n  \"waves\": \"WAVES\",\n  \"digibyte\": \"DGB\",\n  \"qtum\": \"QTUM\",\n  \"kusama\": \"KSM\",\n  \"decred\": \"DCR\",\n  \"horizen\": \"ZEN\",\n  \"siacoin\": \"SC\",\n  \"stargate finance\": \"STG\",\n  \"stargate\": \"STG\",\n  \"woo network\": \"WOO\",\n  \"woo\": \"WOO\",\n  \"conflux\": \"CFX\",\n  \"skale\": \"SKL\",\n  \"mask network\": \"MASK\",\n  \"mask\": \"MASK\",\n  \"api3\": \"API3\",\n  \"omg network\": \"OMG\",\n  \"omg\": \"OMG\",\n  \"ethereum name service\": \"ENS\",\n  \"ens\": \"ENS\",\n  \"magic\": \"MAGIC\",\n  \"ankr\": \"ANKR\",\n  \"ssv network\": \"SSV\",\n  \"ssv\": \"SSV\",\n  \"binaryx\": \"BNX\",\n  \"nem\": \"XEM\",\n  \"helium\": \"HNT\",\n  \"swipe\": \"SXP\",\n  \"linear\": \"LINA\",\n  \"loopring\": \"LRC\",\n  \"rocket pool\": \"RPL\",\n  \"origin protocol\": \"OGN\",\n  \"origin\": \"OGN\",\n  \"constitutiondao\": \"PEOPLE\",\n  \"people\": \"PEOPLE\",\n  \"pax gold\": \"PAXG\",\n  \"marlin\": \"POND\",\n  \"ethereumpow\": \"ETHW\",\n  \"trust wallet token\": \"TWT\",\n  \"trust wallet\": \"TWT\",\n  \"jasmy\": \"JASMY\",\n  \"jasmycoin\": \"JASMY\",\n  \"ocean protocol\": \"OCEAN\",\n  \"ocean\": \"OCEAN\",\n  \"alpha venture dao\": \"ALPHA\",\n  \"alpha\": \"ALPHA\",\n  \"dodo\": \"DODO\",\n  \"iotex\": \"IOTX\",\n  \"verge\": \"XVG\",\n  \"storj\": \"STORJ\",\n  \"bakerytoken\": \"BAKE\",\n  \"bakery\": \"BAKE\",\n  \"reserve rights\": \"RSR\",\n  \"rsk infrastructure framework\": \"RIF\",\n  \"certik\": \"CTK\",\n  \"bounce finance\": \"AUCTION\",\n  \"bounce\": \"AUCTION\",\n  \"safepal\": \"SFP\",\n  \"measurable data token\": \"MDT\",\n  \"mobox\": \"MBOX\",\n  \"bella protocol\": \"BEL\",\n  \"bella\": \"BEL\",\n  \"wing finance\": \"WING\",\n  \"wing\": \"WING\",\n  \"komodo\": \"KMD\",\n  \"iexec rlc\": \"RLC\",\n  \"iexec\": \"RLC\",\n  \"nkn\": \"NKN\",\n  \"arpa\": \"ARPA\"\n};\n// Suggestions Component\nconst Suggestions = ({\n  onSuggestionSelect\n}) => {\n  const suggestions = [\"Should I buy Solana now?\", \"What's happening in the crypto market?\", \"Should I enter a long position on ETH?\", \"Is Bitcoin a good short right now?\", \"Should I buy SOL for short term with low risk?\", \"Analyze Cardano's price movement for long-term investment\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-2 md:grid-cols-3 gap-3 p-4\",\n    children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-gray-900 hover:bg-gray-800 text-left p-3 rounded-lg text-sm text-gray-300 transition-colors\",\n      onClick: () => onSuggestionSelect(suggestion),\n      children: suggestion\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n\n// Message formatting helper\n_c = Suggestions;\nconst formatMessage = content => {\n  if (!content) return \"No content available\";\n\n  // Split by numbered sections with asterisks/numbers\n  const parts = content.split(/(\\d\\.\\s\\*\\*.*?\\*\\*:)/g);\n  if (parts.length > 1) {\n    return parts.map((part, index) => {\n      // Check if this is a section header\n      if (part.match(/\\d\\.\\s\\*\\*.*?\\*\\*:/)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold mt-2\",\n          children: part.replace(/\\*\\*/g, '')\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 16\n        }, this);\n      }\n      // This is section content\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  // Check for Markdown-style bold text\n  if (content.includes('**')) {\n    return content.split('\\n').map((line, index) => {\n      // Replace bold markdown with styled spans\n      const processedLine = line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        dangerouslySetInnerHTML: {\n          __html: processedLine\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  // If no structured format detected, just return the content with line breaks\n  return content.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-1\",\n    children: line\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this));\n};\n\n// User Context Form Component\n// UserContextForm Component with comprehensive coin support\nconst UserContextForm = ({\n  userContext,\n  setUserContext,\n  onClose\n}) => {\n  _s();\n  const [localContext, setLocalContext] = useState(userContext);\n  const [availableCoins, setAvailableCoins] = useState([]);\n  const [isLoadingCoins, setIsLoadingCoins] = useState(false);\n  const [coinSearchQuery, setCoinSearchQuery] = useState('');\n\n  // Update local state when props change\n  useEffect(() => {\n    setLocalContext(userContext);\n  }, [userContext]);\n\n  // Load available coins from the backend\n  useEffect(() => {\n    const fetchAvailableCoins = async () => {\n      setIsLoadingCoins(true);\n      try {\n        // Get list of supported coins from your backend\n        const response = await fetch('/api/supported-coins');\n        if (!response.ok) {\n          throw new Error('Failed to fetch supported coins');\n        }\n        const data = await response.json();\n\n        // If we have coins from API, use them\n        if (data.coins && Array.isArray(data.coins) && data.coins.length > 0) {\n          setAvailableCoins(data.coins);\n          console.log(`Loaded ${data.coins.length} coins from API`);\n        } else {\n          // Otherwise use our default comprehensive list\n          setAvailableCoins(defaultCoinList);\n          console.log(\"Using default coin list\");\n        }\n      } catch (error) {\n        console.error('Error fetching supported coins:', error);\n        // Fallback to the most popular coins as a default\n        setAvailableCoins(defaultCoinList);\n        console.log(\"Using default coin list due to API error\");\n      } finally {\n        setIsLoadingCoins(false);\n      }\n    };\n    fetchAvailableCoins();\n  }, []);\n\n  // Default comprehensive list of the most popular coins\n  const defaultCoinList = ['BTC', 'ETH', 'BNB', 'SOL', 'XRP', 'ADA', 'DOGE', 'SHIB', 'DOT', 'MATIC', 'AVAX', 'LINK', 'UNI', 'LTC', 'ATOM', 'TON', 'NEAR', 'ICP', 'APT', 'BCH', 'FTM', 'ALGO', 'OP', 'ARB', 'STX', 'HBAR', 'ETC', 'FLOW', 'EGLD', 'ONE', 'AAVE', 'MKR', 'CRV', 'CAKE', 'COMP', 'SNX', '1INCH', 'YFI', 'SUSHI', 'LDO', 'SAND', 'MANA', 'AXS', 'ENJ', 'GALA', 'APE', 'RUNE', 'PEPE', 'TIA', 'SUI', 'FET', 'AST', 'XMR', 'DYDX', 'GRT', 'VET', 'INJ', 'XTZ', 'EOS', 'NEO'];\n\n  // Portfolio input field management\n  const [portfolioInput, setPortfolioInput] = useState('');\n\n  // Filter available coins based on search query\n  const filteredCoins = availableCoins.filter(coin => coin.includes(coinSearchQuery.toUpperCase())).slice(0, 20); // Limit to 20 results for better UI performance\n\n  // Check if the input might be a coin name rather than a symbol\n  const getSymbolFromName = name => {\n    // Check if the input might be a coin name, using our mapping\n    const normalizedInput = name.trim().toLowerCase();\n    for (const [coinName, symbol] of Object.entries(COIN_NAME_MAPPING)) {\n      if (normalizedInput.includes(coinName)) {\n        return symbol;\n      }\n    }\n    return null;\n  };\n  const addPortfolioCoin = (coin = null) => {\n    // Use either the selected coin or the input value\n    let coinToAdd = coin || portfolioInput.trim().toUpperCase();\n\n    // If no coin was passed and the input might be a name rather than a symbol\n    if (!coin && coinToAdd.length > 5) {\n      const symbolFromName = getSymbolFromName(coinToAdd);\n      if (symbolFromName) {\n        coinToAdd = symbolFromName;\n      }\n    }\n    if (coinToAdd && !localContext.portfolio.includes(coinToAdd)) {\n      setLocalContext({\n        ...localContext,\n        portfolio: [...localContext.portfolio, coinToAdd]\n      });\n      setPortfolioInput('');\n      setCoinSearchQuery('');\n    }\n  };\n  const removePortfolioCoin = coin => {\n    setLocalContext({\n      ...localContext,\n      portfolio: localContext.portfolio.filter(c => c !== coin)\n    });\n  };\n  const handleSave = () => {\n    setUserContext(localContext);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-900 text-white rounded-lg p-6 max-w-md w-full mx-4 border border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-orange-500\",\n        children: \"Your Investment Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium mb-1 text-gray-300\",\n          children: \"Risk Tolerance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border border-gray-700 rounded bg-gray-800 text-white\",\n          value: localContext.risk_tolerance,\n          onChange: e => setLocalContext({\n            ...localContext,\n            risk_tolerance: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"Low (Conservative)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium (Balanced)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"High (Aggressive)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium mb-1 text-gray-300\",\n          children: \"Investment Horizon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border border-gray-700 rounded bg-gray-800 text-white\",\n          value: localContext.investment_horizon,\n          onChange: e => setLocalContext({\n            ...localContext,\n            investment_horizon: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"short\",\n            children: \"Short-term (less than 1 year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium-term (1-3 years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"long\",\n            children: \"Long-term (more than 3 years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium mb-1 text-gray-300\",\n          children: \"Your Crypto Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search or add coin (e.g., BTC, Bitcoin, Ethereum)\",\n            className: \"w-full p-2 border border-gray-700 rounded bg-gray-800 text-white\",\n            value: coinSearchQuery || portfolioInput,\n            onChange: e => {\n              const value = e.target.value;\n              setCoinSearchQuery(value.toUpperCase());\n              setPortfolioInput(value);\n            },\n            onKeyPress: e => e.key === 'Enter' && addPortfolioCoin()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), coinSearchQuery && filteredCoins.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute z-10 mt-1 w-full max-h-40 overflow-y-auto bg-gray-800 border border-gray-700 rounded\",\n            children: filteredCoins.map(coin => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 hover:bg-gray-700 cursor-pointer\",\n              onClick: () => {\n                addPortfolioCoin(coin);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: coin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this), getCoinFullName(coin) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-400 ml-2\",\n                children: getCoinFullName(coin)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 23\n              }, this)]\n            }, coin, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), isLoadingCoins && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"Loading available coins...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2 mt-3\",\n          children: [localContext.portfolio.map(coin => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 px-2 py-1 rounded flex items-center border border-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-1\",\n              children: coin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removePortfolioCoin(coin),\n              className: \"text-orange-500 text-xs font-bold\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this)]\n          }, coin, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)), localContext.portfolio.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 text-sm\",\n            children: \"No coins added yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium mb-1 text-gray-300\",\n          children: \"Popular Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: ['BTC', 'ETH', 'SOL', 'BNB', 'XRP', 'DOGE', 'ADA', 'MATIC', 'AVAX', 'LINK'].map(coin => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-800 hover:bg-gray-700 text-xs px-2 py-1 rounded border border-gray-700\",\n            onClick: () => {\n              if (!localContext.portfolio.includes(coin)) {\n                setLocalContext({\n                  ...localContext,\n                  portfolio: [...localContext.portfolio, coin]\n                });\n              }\n            },\n            children: coin\n          }, coin, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"px-4 py-2 border border-gray-700 rounded text-gray-300 hover:bg-gray-800\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700\",\n          children: \"Save Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get the full name of a coin from its symbol\n_s(UserContextForm, \"XyxrNH0RBjUJQjqFS7Npp72OjsY=\");\n_c2 = UserContextForm;\nconst getCoinFullName = symbol => {\n  // Create a reverse mapping from symbol to name\n  const symbolToName = {};\n\n  // Populate the reverse mapping based on our COIN_NAME_MAPPING\n  Object.entries(COIN_NAME_MAPPING).forEach(([name, sym]) => {\n    // For each symbol, store the longest name (most descriptive)\n    if (!symbolToName[sym] || name.length > symbolToName[sym].length) {\n      symbolToName[sym] = name;\n    }\n  });\n\n  // Mapping of common symbols to full names\n  const fullNames = {\n    'BTC': 'Bitcoin',\n    'ETH': 'Ethereum',\n    'BNB': 'Binance Coin',\n    'SOL': 'Solana',\n    'XRP': 'XRP (Ripple)',\n    'ADA': 'Cardano',\n    'DOGE': 'Dogecoin',\n    'SHIB': 'Shiba Inu',\n    'DOT': 'Polkadot',\n    'MATIC': 'Polygon',\n    'AVAX': 'Avalanche',\n    'LINK': 'Chainlink',\n    'UNI': 'Uniswap',\n    'LTC': 'Litecoin',\n    'ATOM': 'Cosmos',\n    'HBAR': 'Hedera',\n    'AST': 'AirSwap'\n    // Add more mappings as needed\n  };\n\n  // Use either the reverse-engineered name from COIN_NAME_MAPPING or the hardcoded mapping\n  return symbolToName[symbol] ? symbolToName[symbol].charAt(0).toUpperCase() + symbolToName[symbol].slice(1) : fullNames[symbol] || '';\n};\n\n// Main Chat Component\nconst CryptoAnalyzerChat = () => {\n  _s2();\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showContextForm, setShowContextForm] = useState(false);\n  const [userContext, setUserContext] = useState({\n    risk_tolerance: \"medium\",\n    investment_horizon: \"medium\",\n    portfolio: []\n  });\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Context extraction function remains the same\n  const extractContextFromMessage = message => {\n    // ... existing logic ...\n    const lowerMessage = message.toLowerCase();\n    let contextOverride = {};\n\n    // Only add risk_tolerance to context if explicitly mentioned in the message\n    // Low risk patterns\n    if (lowerMessage.includes(\"low risk\") || lowerMessage.includes(\"conservative\") || lowerMessage.includes(\"risk tolerance is low\") || lowerMessage.includes(\"risk tolerance is short\") || lowerMessage.includes(\"risk is low\") || lowerMessage.includes(\"risk is short\") || lowerMessage.includes(\"minimal risk\") || lowerMessage.includes(\"safe investment\")) {\n      contextOverride.risk_tolerance = \"low\";\n      console.log(\"Detected LOW risk tolerance from message\");\n    }\n    // High risk patterns\n    else if (lowerMessage.includes(\"high risk\") || lowerMessage.includes(\"aggressive\") || lowerMessage.includes(\"risk tolerance is high\") || lowerMessage.includes(\"risk is high\") || lowerMessage.includes(\"risky investment\") || lowerMessage.includes(\"willing to take risk\")) {\n      contextOverride.risk_tolerance = \"high\";\n      console.log(\"Detected HIGH risk tolerance from message\");\n    }\n    // Medium risk patterns\n    else if (lowerMessage.includes(\"medium risk\") || lowerMessage.includes(\"moderate risk\") || lowerMessage.includes(\"balanced\") || lowerMessage.includes(\"risk tolerance is medium\") || lowerMessage.includes(\"risk tolerance is moderate\") || lowerMessage.includes(\"risk is medium\") || lowerMessage.includes(\"risk is moderate\")) {\n      contextOverride.risk_tolerance = \"medium\";\n      console.log(\"Detected MEDIUM risk tolerance from message\");\n    }\n\n    // Only add investment_horizon to context if explicitly mentioned in the message\n    // Short term patterns\n    if (lowerMessage.includes(\"short term\") || lowerMessage.includes(\"short-term\") || lowerMessage.includes(\"short investment\") || lowerMessage.includes(\"quick trade\") || lowerMessage.includes(\"near term\") || lowerMessage.includes(\"immediate\") || lowerMessage.includes(\"day trade\") || lowerMessage.includes(\"swing trade\")) {\n      contextOverride.investment_horizon = \"short\";\n      console.log(\"Detected SHORT term horizon from message\");\n    }\n    // Long term patterns\n    else if (lowerMessage.includes(\"long term\") || lowerMessage.includes(\"long-term\") || lowerMessage.includes(\"long investment\") || lowerMessage.includes(\"hold for years\") || lowerMessage.includes(\"hodl\") || lowerMessage.includes(\"invest for the future\")) {\n      contextOverride.investment_horizon = \"long\";\n      console.log(\"Detected LONG term horizon from message\");\n    }\n    // Medium term patterns\n    else if (lowerMessage.includes(\"medium term\") || lowerMessage.includes(\"medium-term\") || lowerMessage.includes(\"mid term\") || lowerMessage.includes(\"mid-term\") || lowerMessage.includes(\"intermediate\") || lowerMessage.includes(\"few months\")) {\n      contextOverride.investment_horizon = \"medium\";\n      console.log(\"Detected MEDIUM term horizon from message\");\n    }\n    console.log(\"Context extracted from message:\", contextOverride);\n    return contextOverride;\n  };\n\n  // Other utility functions remain the same\n  const isFuturesQuery = queryText => {\n    const futuresPatterns = [/\\blong position\\b/i, /\\bshort position\\b/i, /\\bgo long\\b/i, /\\bgo short\\b/i, /\\benter a long\\b/i, /\\benter a short\\b/i, /\\bfutures\\b/i, /\\bleveraged\\b/i, /\\blonging\\b/i, /\\bshorting\\b/i];\n    return futuresPatterns.some(pattern => pattern.test(queryText));\n  };\n\n  // Comprehensive name-to-symbol mapping for improved user experience\n\n  const extractCoin = queryText => {\n    /**\r\n     * Enhanced function to extract coin symbols from user messages\r\n     * @param {string} queryText - The user's query text\r\n     * @return {string} The extracted coin symbol or default \"BTC\"\r\n     */\n    // Normalize query text\n    const queryLower = queryText.toLowerCase();\n\n    // Import the comprehensive coin mapping defined above\n    // This is the same mapping we've defined in the COIN_NAME_MAPPING constant\n\n    // First check for exact symbol matches (case insensitive)\n    for (const [name, symbol] of Object.entries(COIN_NAME_MAPPING)) {\n      // Check each name->symbol mapping\n      if (queryLower.includes(name)) {\n        console.log(`Detected coin ${symbol} from name \"${name}\"`);\n        return symbol;\n      }\n    }\n\n    // Direct symbol detection for common coins\n    // This helps catch symbols not in our mapping\n    const commonCoins = ['BTC', 'ETH', 'SOL', 'ADA', 'XRP', 'DOT', 'DOGE', 'AVAX', 'MATIC', 'LINK', 'UNI', 'LTC', 'ATOM', 'HBAR', 'AST', 'BNB', 'SHIB', 'NEAR', 'TON', 'SUI', 'TIA', 'FET', 'APT', 'ARB', 'OP', 'IMX', 'AAVE'];\n    for (const coin of commonCoins) {\n      const regex = new RegExp(`\\\\b${coin.toLowerCase()}\\\\b`, 'i');\n      if (regex.test(queryLower)) {\n        console.log(`Detected coin ${coin} from direct symbol mention`);\n        return coin;\n      }\n    }\n\n    // If we reach here and still don't have a match, use a more general context check\n    // This is for phrases like \"current bitcoin price\" where the coin is mentioned indirectly\n    const contextPatterns = [{\n      pattern: /\\bbtc\\b|\\bbitcoin\\b/i,\n      symbol: 'BTC'\n    }, {\n      pattern: /\\beth\\b|\\bethereum\\b/i,\n      symbol: 'ETH'\n    }, {\n      pattern: /\\bsol\\b|\\bsolana\\b/i,\n      symbol: 'SOL'\n    }, {\n      pattern: /\\bhbar\\b|\\bhedera\\b/i,\n      symbol: 'HBAR'\n    }, {\n      pattern: /\\bast\\b|\\bairswap\\b/i,\n      symbol: 'AST'\n    }, {\n      pattern: /\\bbnb\\b|\\bbinance\\b/i,\n      symbol: 'BNB'\n    }];\n    for (const {\n      pattern,\n      symbol\n    } of contextPatterns) {\n      if (pattern.test(queryLower)) {\n        console.log(`Detected coin ${symbol} from context pattern`);\n        return symbol;\n      }\n    }\n\n    // Check for intent-based coin detection\n    // This helps with queries like \"should I buy a good defi token\"\n    const intentBasedPatterns = [{\n      intent: /\\bdefi\\b|\\byield\\b|\\blending\\b|\\bliquidity\\b/i,\n      suggestions: ['AAVE', 'UNI', 'COMP', 'MKR', 'CRV']\n    }, {\n      intent: /\\bgaming\\b|\\bmetaverse\\b|\\bnft\\b/i,\n      suggestions: ['SAND', 'MANA', 'AXS', 'ENJ', 'GALA']\n    }, {\n      intent: /\\blayer\\s*2\\b|\\bscaling\\b|\\bl2\\b/i,\n      suggestions: ['MATIC', 'ARB', 'OP', 'IMX']\n    }, {\n      intent: /\\bmeme\\b|\\bmemes\\b/i,\n      suggestions: ['DOGE', 'SHIB', 'PEPE', 'BONK', 'WIF']\n    }, {\n      intent: /\\bstablecoin\\b/i,\n      suggestions: ['USDT', 'USDC', 'DAI', 'BUSD']\n    }, {\n      intent: /\\bsmart\\s*contract\\b|\\bplatform\\b/i,\n      suggestions: ['ETH', 'SOL', 'ADA', 'DOT', 'AVAX']\n    }, {\n      intent: /\\bprivacy\\b|\\banonymous\\b/i,\n      suggestions: ['XMR', 'ZEC', 'DASH']\n    }];\n    for (const {\n      intent,\n      suggestions\n    } of intentBasedPatterns) {\n      if (intent.test(queryLower)) {\n        const selected = suggestions[0]; // Default to first suggestion\n        console.log(`Detected intent for ${selected} based on query context`);\n        return selected;\n      }\n    }\n\n    // If no specific coin detected, default to BTC\n    console.log(\"No specific coin detected, defaulting to BTC\");\n    return 'BTC';\n  };\n  const extractFuturesDirection = queryText => {\n    // ... existing function ...\n    const queryLower = queryText.toLowerCase();\n\n    // Check for long patterns\n    if (/long|buy|bull/i.test(queryLower) && !/short|sell|bear/i.test(queryLower)) {\n      return 'long';\n    }\n\n    // Check for short patterns\n    if (/short|sell|bear/i.test(queryLower) && !/long|buy|bull/i.test(queryLower)) {\n      return 'short';\n    }\n\n    // Default to \"long\" if direction not clear\n    return 'long';\n  };\n  const handleSubmit = async e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    if (!query.trim()) return;\n\n    // New function to check if query is crypto-related\n    const isCryptoRelatedQuery = queryText => {\n      const cryptoKeywords = ['bitcoin', 'crypto', 'blockchain', 'ethereum', 'trading', 'market', 'coin', 'investment', 'solana', 'xrp', 'buy', 'sell', 'portfolio', 'futures', 'long', 'short', 'price', 'trend'];\n      const queryLower = queryText.toLowerCase();\n      return cryptoKeywords.some(keyword => queryLower.includes(keyword));\n    };\n\n    // Check if query is crypto-related\n    if (!isCryptoRelatedQuery(query)) {\n      // Add a clarification message\n      const clarificationMessage = {\n        type: 'ai',\n        content: `I'm an AI specialized in cryptocurrency and market analysis. Could you rephrase your query to be about crypto markets, trading, or specific cryptocurrencies? \n\nSome example queries:\n- Should I buy Bitcoin?\n- What's happening with Ethereum?\n- Analyze Solana's price movement\n- Give me a futures trading recommendation\n\nI can help you with:\n✓ Cryptocurrency analysis\n✓ Trading recommendations\n✓ Market sentiment\n✓ Futures trading insights`,\n        coin: 'Assistant',\n        intent: 'Clarification',\n        actionColor: 'blue',\n        timestamp: new Date().toLocaleString()\n      };\n\n      // Add user and AI messages\n      setMessages(prev => [...prev, {\n        type: 'user',\n        content: query,\n        timestamp: new Date().toLocaleString()\n      }, clarificationMessage]);\n\n      // Reset query and loading state\n      setQuery('');\n      setIsLoading(false);\n      return;\n    }\n    console.log(\"===============================\");\n    console.log(\"Processing query:\", query);\n\n    // Add user message\n    const userMessage = {\n      type: 'user',\n      content: query,\n      timestamp: new Date().toLocaleString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n\n    // Extract any context information from the message\n    const contextOverride = extractContextFromMessage(query);\n\n    // Only use the context explicitly mentioned in the message\n    let requestContext = {};\n\n    // Only if user explicitly mentioned context, send it\n    if (Object.keys(contextOverride).length > 0) {\n      requestContext = contextOverride;\n      console.log(\"Using message-specific context:\", requestContext);\n    } else {\n      console.log(\"No context mentioned in message, not sending any context information\");\n    }\n\n    // Merge context for display purposes\n    const messageContext = {\n      ...userContext,\n      ...contextOverride\n    };\n    console.log(\"Profile context:\", userContext);\n    console.log(\"Message context override:\", contextOverride);\n    console.log(\"Final context for request:\", messageContext);\n\n    // Determine if this is a futures trading query\n    const isFutures = isFuturesQuery(query);\n    let apiEndpoint, requestOptions, messageType;\n    if (isFutures) {\n      // Extract coin and direction for futures trading\n      const coin = extractCoin(query);\n      const direction = extractFuturesDirection(query);\n\n      // Create URL with query parameters\n      const params = new URLSearchParams({\n        action_type: 'futures',\n        position: direction,\n        // Add position parameter\n        force_refresh: 'true' // Force refresh to avoid caching issues\n      });\n      apiEndpoint = `/recommendation/${coin}?${params.toString()}`;\n      requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      messageType = direction === 'long' ? 'LONG' : 'SHORT';\n      console.log(`Making futures ${direction} request for ${coin}`);\n    } else {\n      // Standard analysis query\n      apiEndpoint = '/analyze';\n\n      // Create request body with explicit context\n      const requestBody = {\n        message: query,\n        context: requestContext // Use the context with message-specific overrides\n      };\n      console.log(\"Making API call to:\", apiEndpoint);\n      console.log(\"Request body:\", JSON.stringify(requestBody, null, 2));\n      requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      };\n      messageType = 'analysis';\n    }\n    setIsLoading(true);\n    setQuery('');\n    try {\n      const response = await fetch(apiEndpoint, requestOptions);\n      if (!response.ok) {\n        throw new Error('Request failed');\n      }\n      const data = await response.json();\n      console.log(\"API Response:\", JSON.stringify(data, null, 2));\n\n      // Check if the context in the response matches what we sent\n      if (data.context) {\n        console.log(\"Context match check:\");\n        console.log(\"- Expected risk_tolerance:\", messageContext.risk_tolerance);\n        console.log(\"- Received risk_tolerance:\", data.context.risk_tolerance);\n        console.log(\"- Expected investment_horizon:\", messageContext.investment_horizon);\n        console.log(\"- Received investment_horizon:\", data.context.investment_horizon);\n      }\n\n      // Format response based on endpoint type\n      let aiMessage;\n      if (isFutures) {\n        // Extract coin and direction for futures trading\n        const coin = extractCoin(query);\n        const direction = extractFuturesDirection(query);\n\n        // Format recommendation using the new helper function\n        const formatFuturesRecommendation = (data, direction) => {\n          // Get the appropriate action label based on direction and API's action recommendation\n          let actionLabel;\n          let summary;\n          let recommendationColor;\n\n          // For LONG positions\n          if (direction === 'long') {\n            if (data.action === 'BUY') {\n              actionLabel = 'ENTER LONG';\n              summary = `RECOMMENDED to enter a long position on ${data.coin}`;\n              recommendationColor = 'green';\n            } else if (data.action === 'SELL') {\n              actionLabel = 'AVOID LONG';\n              summary = `NOT RECOMMENDED to go long on ${data.coin} at this time`;\n              recommendationColor = 'yellow';\n            } else {\n              actionLabel = 'NEUTRAL';\n              summary = `NEUTRAL outlook for ${data.coin} long position`;\n              recommendationColor = 'gray';\n            }\n          }\n          // For SHORT positions\n          else if (direction === 'short') {\n            if (data.action === 'SELL') {\n              actionLabel = 'ENTER SHORT';\n              summary = `RECOMMENDED to enter a short position on ${data.coin}`;\n              recommendationColor = 'red';\n            } else if (data.action === 'BUY') {\n              actionLabel = 'AVOID SHORT';\n              summary = `NOT RECOMMENDED to short ${data.coin} at this time`;\n              recommendationColor = 'yellow';\n            } else {\n              actionLabel = 'NEUTRAL';\n              summary = `NEUTRAL outlook for ${data.coin} short position`;\n              recommendationColor = 'gray';\n            }\n          }\n\n          // Get explanation from available fields\n          const explanation = data.explanation || data.analysis || data.summary || \"No detailed analysis available.\";\n\n          // Format the content for display\n          return {\n            label: actionLabel,\n            content: `**${actionLabel}** - ${summary}\\n\\n${explanation}`,\n            color: recommendationColor\n          };\n        };\n        const recommendation = formatFuturesRecommendation(data, direction);\n\n        // Format recommendation response\n        aiMessage = {\n          type: 'ai',\n          content: recommendation.content,\n          coin: data.coin || extractCoin(query),\n          intent: messageType,\n          direction: direction,\n          action: recommendation.label,\n          actionColor: recommendation.color,\n          context: messageContext,\n          timestamp: new Date().toLocaleString()\n        };\n      } else {\n        // Format analysis response\n        aiMessage = {\n          type: 'ai',\n          content: data.response,\n          coin: data.detected_coin || 'Market',\n          intent: data.detected_intent || 'Analysis',\n          // Use the context from the API response if available, otherwise use our calculated context\n          context: data.context || messageContext,\n          actionColor: 'blue',\n          timestamp: new Date(data.timestamp * 1000).toLocaleString()\n        };\n      }\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        type: 'error',\n        content: 'Sorry, something went wrong. Please try again.',\n        timestamp: new Date().toLocaleString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Format context for display\n  const formatContext = context => {\n    if (!context) return \"\";\n    const riskMap = {\n      \"low\": \"low risk\",\n      \"medium\": \"medium risk\",\n      \"high\": \"high risk\"\n    };\n    const horizonMap = {\n      \"short\": \"short-term\",\n      \"medium\": \"medium-term\",\n      \"long\": \"long-term\"\n    };\n    return `(${riskMap[context.risk_tolerance] || context.risk_tolerance}, ${horizonMap[context.investment_horizon] || context.investment_horizon})`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen w-full bg-black text-white shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-4 border-b border-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/landing.html\",\n        className: \"text-2xl font-bold text-orange-500 cursor-pointer hover:text-orange-400\",\n        children: \"AionX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowContextForm(true),\n          className: \"flex items-center text-sm text-gray-400 hover:text-orange-500 mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            size: 16,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 13\n          }, this), \"Profile\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Powered by DeepSeek\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto p-4 space-y-4\",\n      style: {\n        backgroundImage: 'radial-gradient(circle at 10% 20%, rgba(50, 50, 50, 0.2) 0%, rgba(20, 20, 20, 0.2) 90%)',\n        backgroundAttachment: 'fixed'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-6xl mx-auto w-full\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-3xl font-bold mb-2 text-orange-500\",\n              children: \"Welcome to AionX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300 mb-4\",\n              children: \"Get AI-powered cryptocurrency analysis and trading recommendations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-400 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Your profile: \", userContext.risk_tolerance, \" risk, \", userContext.investment_horizon, \"-term horizon\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 19\n              }, this), userContext.portfolio.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Portfolio: \", userContext.portfolio.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 italic\",\n              children: \"Tip: You can mention risk tolerance and time horizon in your query, like \\\"give me a recommendation for SOL with low risk and short term\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Suggestions, {\n            onSuggestionSelect: suggestion => {\n              setQuery(suggestion);\n              handleSubmit({\n                preventDefault: () => {}\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        // In the messages mapping section of the render method\n        messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[85%] p-3 rounded-lg ${message.type === 'user' ? 'bg-gray-800 border border-gray-700 text-white' : message.type === 'error' ? 'bg-gray-800 border border-gray-700 text-red-400' : 'bg-gray-800 border border-gray-700'}`,\n            children: [message.type === 'ai' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-semibold mb-1 text-white\",\n              children: [message.coin, \" \", message.intent === 'LONG' || message.intent === 'SHORT' ? `${message.intent} Recommendation` : message.intent && message.intent !== 'general' ? message.intent.toUpperCase() : 'Analysis', message.context && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500 ml-2\",\n                children: formatContext(message.context)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm whitespace-pre-wrap\",\n              children: message.type === 'ai' ? formatMessage(message.content) : message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mt-2 text-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1201,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 5\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 3\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader w-8 h-8 border-4 border-gray-700 border-t-orange-500 rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"p-4 border-t border-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-6xl mx-auto w-full flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Ask about cryptocurrency markets or futures positions...\",\n          disabled: isLoading,\n          className: \"flex-grow p-3 bg-gray-900 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 border border-gray-700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading || !query.trim(),\n          className: \"bg-orange-600 text-white p-3 rounded-lg hover:bg-orange-700 transition-colors disabled:opacity-50\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 7\n    }, this), showContextForm && /*#__PURE__*/_jsxDEV(UserContextForm, {\n      userContext: userContext,\n      setUserContext: setUserContext,\n      onClose: () => setShowContextForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1119,\n    columnNumber: 5\n  }, this);\n};\n_s2(CryptoAnalyzerChat, \"9KE7XWoxm8PTpuLB1ImQKFFjn94=\");\n_c3 = CryptoAnalyzerChat;\nexport default CryptoAnalyzerChat;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Suggestions\");\n$RefreshReg$(_c2, \"UserContextForm\");\n$RefreshReg$(_c3, \"CryptoAnalyzerChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Send","Settings","jsxDEV","_jsxDEV","Fragment","_Fragment","COIN_NAME_MAPPING","Suggestions","onSuggestionSelect","suggestions","className","children","map","suggestion","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","formatMessage","content","parts","split","length","part","match","replace","includes","line","processedLine","dangerouslySetInnerHTML","__html","UserContextForm","userContext","setUserContext","onClose","_s","localContext","setLocalContext","availableCoins","setAvailableCoins","isLoadingCoins","setIsLoadingCoins","coinSearchQuery","setCoinSearchQuery","fetchAvailableCoins","response","fetch","ok","Error","data","json","coins","Array","isArray","console","log","defaultCoinList","error","portfolioInput","setPortfolioInput","filteredCoins","filter","coin","toUpperCase","slice","getSymbolFromName","name","normalizedInput","trim","toLowerCase","coinName","symbol","Object","entries","addPortfolioCoin","coinToAdd","symbolFromName","portfolio","removePortfolioCoin","c","handleSave","value","risk_tolerance","onChange","e","target","investment_horizon","type","placeholder","onKeyPress","key","getCoinFullName","_c2","symbolToName","forEach","sym","fullNames","charAt","CryptoAnalyzerChat","_s2","query","setQuery","messages","setMessages","isLoading","setIsLoading","showContextForm","setShowContextForm","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","extractContextFromMessage","message","lowerMessage","contextOverride","isFuturesQuery","queryText","futuresPatterns","some","pattern","test","extractCoin","queryLower","commonCoins","regex","RegExp","contextPatterns","intentBasedPatterns","intent","selected","extractFuturesDirection","handleSubmit","preventDefault","isCryptoRelatedQuery","cryptoKeywords","keyword","clarificationMessage","actionColor","timestamp","Date","toLocaleString","prev","userMessage","requestContext","keys","messageContext","isFutures","apiEndpoint","requestOptions","messageType","direction","params","URLSearchParams","action_type","position","force_refresh","toString","method","headers","requestBody","context","JSON","stringify","body","aiMessage","formatFuturesRecommendation","actionLabel","summary","recommendationColor","action","explanation","analysis","label","color","recommendation","detected_coin","detected_intent","errorMessage","formatContext","riskMap","horizonMap","href","size","style","backgroundImage","backgroundAttachment","join","ref","onSubmit","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/satya/Cabalprojects/crypto_advisor/frontend/src/components/CryptoAnalyzerChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Send, Settings } from 'lucide-react';\r\n\r\nconst COIN_NAME_MAPPING = {\r\n  // Major Cryptocurrencies\r\n  \"bitcoin\": \"BTC\",\r\n  \"ethereum\": \"ETH\",\r\n  \"binance coin\": \"BNB\",\r\n  \"bnb\": \"BNB\",\r\n  \"solana\": \"SOL\",\r\n  \"ripple\": \"XRP\",\r\n  \"xrp\": \"XRP\",\r\n  \"cardano\": \"ADA\",\r\n  \"dogecoin\": \"DOGE\",\r\n  \"doge\": \"DOGE\",\r\n  \"shiba inu\": \"SHIB\",\r\n  \"shib\": \"SHIB\",\r\n  \"polkadot\": \"DOT\",\r\n  \"polygon\": \"MATIC\",\r\n  \"avalanche\": \"AVAX\",\r\n  \"chainlink\": \"LINK\",\r\n  \"uniswap\": \"UNI\",\r\n  \"litecoin\": \"LTC\",\r\n  \"cosmos\": \"ATOM\",\r\n  \"toncoin\": \"TON\",\r\n  \"ton\": \"TON\",\r\n  \"near protocol\": \"NEAR\",\r\n  \"near\": \"NEAR\",\r\n  \"internet computer\": \"ICP\",\r\n  \"aptos\": \"APT\",\r\n  \"bitcoin cash\": \"BCH\",\r\n  \r\n  // Layer-1 & Layer-2 Solutions\r\n  \"fantom\": \"FTM\",\r\n  \"algorand\": \"ALGO\",\r\n  \"optimism\": \"OP\",\r\n  \"arbitrum\": \"ARB\",\r\n  \"stacks\": \"STX\",\r\n  \"hedera\": \"HBAR\",\r\n  \"hbar\": \"HBAR\",\r\n  \"ethereum classic\": \"ETC\",\r\n  \"flow\": \"FLOW\",\r\n  \"multiversx\": \"EGLD\",\r\n  \"elrond\": \"EGLD\",\r\n  \"harmony\": \"ONE\",\r\n  \"celo\": \"CELO\",\r\n  \"kava\": \"KAVA\",\r\n  \"klaytn\": \"KLAY\",\r\n  \"zilliqa\": \"ZIL\",\r\n  \"kaspa\": \"KAS\",\r\n  \"sei network\": \"SEI\",\r\n  \"sei\": \"SEI\",\r\n  \"sui\": \"SUI\",\r\n  \"tron\": \"TRX\",\r\n  \"immutable x\": \"IMX\",\r\n  \"immutable\": \"IMX\",\r\n  \"astar\": \"ASTR\",\r\n  \r\n  // DeFi Tokens\r\n  \"maker\": \"MKR\",\r\n  \"aave\": \"AAVE\",\r\n  \"curve\": \"CRV\",\r\n  \"pancakeswap\": \"CAKE\",\r\n  \"cake\": \"CAKE\",\r\n  \"compound\": \"COMP\",\r\n  \"synthetix\": \"SNX\",\r\n  \"1inch\": \"1INCH\",\r\n  \"yearn.finance\": \"YFI\",\r\n  \"yearn\": \"YFI\",\r\n  \"sushiswap\": \"SUSHI\",\r\n  \"sushi\": \"SUSHI\",\r\n  \"convex finance\": \"CVX\",\r\n  \"convex\": \"CVX\",\r\n  \"lido dao\": \"LDO\",\r\n  \"lido\": \"LDO\",\r\n  \"balancer\": \"BAL\",\r\n  \"dydx\": \"DYDX\",\r\n  \"quant\": \"QNT\",\r\n  \"the graph\": \"GRT\",\r\n  \"graph\": \"GRT\",\r\n  \"vechain\": \"VET\",\r\n  \"injective\": \"INJ\",\r\n  \r\n  // Stablecoins\r\n  \"tether\": \"USDT\",\r\n  \"usd coin\": \"USDC\",\r\n  \"binance usd\": \"BUSD\",\r\n  \"dai\": \"DAI\",\r\n  \"trueusd\": \"TUSD\",\r\n  \"first digital usd\": \"FDUSD\",\r\n  \r\n  // Gaming & Metaverse\r\n  \"the sandbox\": \"SAND\",\r\n  \"sandbox\": \"SAND\",\r\n  \"decentraland\": \"MANA\",\r\n  \"axie infinity\": \"AXS\",\r\n  \"axie\": \"AXS\",\r\n  \"enjin coin\": \"ENJ\",\r\n  \"enjin\": \"ENJ\",\r\n  \"gala games\": \"GALA\",\r\n  \"gala\": \"GALA\",\r\n  \"illuvium\": \"ILV\",\r\n  \"blur\": \"BLUR\",\r\n  \"render\": \"RNDR\",\r\n  \"chiliz\": \"CHZ\",\r\n  \"dusk network\": \"DUSK\",\r\n  \"dusk\": \"DUSK\",\r\n  \"stepn\": \"GMT\",\r\n  \"apecoin\": \"APE\",\r\n  \"ape\": \"APE\",\r\n  \"thorchain\": \"RUNE\",\r\n  \r\n  // Exchange Tokens\r\n  \"crypto.com coin\": \"CRO\",\r\n  \"cronos\": \"CRO\",\r\n  \"okb\": \"OKB\",\r\n  \"kucoin token\": \"KCS\",\r\n  \"kucoin\": \"KCS\",\r\n  \"gatetoken\": \"GT\",\r\n  \"ftx token\": \"FTT\",\r\n  \"huobi token\": \"HT\",\r\n  \r\n  // Privacy Coins\r\n  \"monero\": \"XMR\",\r\n  \"zcash\": \"ZEC\",\r\n  \"dash\": \"DASH\",\r\n  \"oasis network\": \"ROSE\",\r\n  \"oasis\": \"ROSE\",\r\n  \r\n  // Storage & Computing\r\n  \"filecoin\": \"FIL\",\r\n  \"arweave\": \"AR\",\r\n  \r\n  // Newer & Trending Tokens\r\n  \"pyth network\": \"PYTH\",\r\n  \"pyth\": \"PYTH\",\r\n  \"jito\": \"JTO\",\r\n  \"bonk\": \"BONK\",\r\n  \"book of meme\": \"BOME\",\r\n  \"bome\": \"BOME\",\r\n  \"pepe\": \"PEPE\",\r\n  \"dogwifhat\": \"WIF\",\r\n  \"wif\": \"WIF\",\r\n  \"jupiter\": \"JUP\",\r\n  \"cyberconnect\": \"CYBER\",\r\n  \"cyber\": \"CYBER\",\r\n  \"celestia\": \"TIA\",\r\n  \"fetch.ai\": \"FET\",\r\n  \"fetch\": \"FET\",\r\n  \"ordinals\": \"ORDI\",\r\n  \"starknet\": \"STRK\",\r\n  \"beam\": \"BEAM\",\r\n  \"blast\": \"BLAST\",\r\n  \"mousepad\": \"MOUSE\",\r\n  \"singularitynet\": \"AGIX\",\r\n  \"space id\": \"ID\",\r\n  \"ace\": \"ACE\",\r\n  \r\n  // Other Significant Coins\r\n  \"airswap\": \"AST\",\r\n  \"ast\": \"AST\",\r\n  \"tezos\": \"XTZ\",\r\n  \"eos\": \"EOS\",\r\n  \"theta network\": \"THETA\",\r\n  \"theta\": \"THETA\",\r\n  \"neo\": \"NEO\",\r\n  \"iota\": \"IOTA\",\r\n  \"stellar\": \"XLM\",\r\n  \"0x\": \"ZRX\",\r\n  \"basic attention token\": \"BAT\",\r\n  \"basic attention\": \"BAT\",\r\n  \"bat\": \"BAT\",\r\n  \"ravencoin\": \"RVN\",\r\n  \"icon\": \"ICX\",\r\n  \"ontology\": \"ONT\",\r\n  \"waves\": \"WAVES\",\r\n  \"digibyte\": \"DGB\",\r\n  \"qtum\": \"QTUM\",\r\n  \"kusama\": \"KSM\",\r\n  \"decred\": \"DCR\",\r\n  \"horizen\": \"ZEN\",\r\n  \"siacoin\": \"SC\",\r\n  \"stargate finance\": \"STG\",\r\n  \"stargate\": \"STG\",\r\n  \"woo network\": \"WOO\",\r\n  \"woo\": \"WOO\",\r\n  \"conflux\": \"CFX\",\r\n  \"skale\": \"SKL\",\r\n  \"mask network\": \"MASK\",\r\n  \"mask\": \"MASK\",\r\n  \"api3\": \"API3\",\r\n  \"omg network\": \"OMG\",\r\n  \"omg\": \"OMG\",\r\n  \"ethereum name service\": \"ENS\",\r\n  \"ens\": \"ENS\",\r\n  \"magic\": \"MAGIC\",\r\n  \"ankr\": \"ANKR\",\r\n  \"ssv network\": \"SSV\",\r\n  \"ssv\": \"SSV\",\r\n  \"binaryx\": \"BNX\",\r\n  \"nem\": \"XEM\",\r\n  \"helium\": \"HNT\",\r\n  \"swipe\": \"SXP\",\r\n  \"linear\": \"LINA\",\r\n  \"loopring\": \"LRC\",\r\n  \"rocket pool\": \"RPL\",\r\n  \"origin protocol\": \"OGN\",\r\n  \"origin\": \"OGN\",\r\n  \"constitutiondao\": \"PEOPLE\",\r\n  \"people\": \"PEOPLE\",\r\n  \"pax gold\": \"PAXG\",\r\n  \"marlin\": \"POND\",\r\n  \"ethereumpow\": \"ETHW\",\r\n  \"trust wallet token\": \"TWT\",\r\n  \"trust wallet\": \"TWT\",\r\n  \"jasmy\": \"JASMY\",\r\n  \"jasmycoin\": \"JASMY\",\r\n  \"ocean protocol\": \"OCEAN\",\r\n  \"ocean\": \"OCEAN\",\r\n  \"alpha venture dao\": \"ALPHA\",\r\n  \"alpha\": \"ALPHA\",\r\n  \"dodo\": \"DODO\",\r\n  \"iotex\": \"IOTX\",\r\n  \"verge\": \"XVG\",\r\n  \"storj\": \"STORJ\",\r\n  \"bakerytoken\": \"BAKE\",\r\n  \"bakery\": \"BAKE\",\r\n  \"reserve rights\": \"RSR\",\r\n  \"rsk infrastructure framework\": \"RIF\",\r\n  \"certik\": \"CTK\",\r\n  \"bounce finance\": \"AUCTION\",\r\n  \"bounce\": \"AUCTION\",\r\n  \"safepal\": \"SFP\",\r\n  \"measurable data token\": \"MDT\",\r\n  \"mobox\": \"MBOX\",\r\n  \"bella protocol\": \"BEL\",\r\n  \"bella\": \"BEL\",\r\n  \"wing finance\": \"WING\",\r\n  \"wing\": \"WING\",\r\n  \"komodo\": \"KMD\",\r\n  \"iexec rlc\": \"RLC\",\r\n  \"iexec\": \"RLC\",\r\n  \"nkn\": \"NKN\",\r\n  \"arpa\": \"ARPA\"\r\n};\r\n// Suggestions Component\r\nconst Suggestions = ({ onSuggestionSelect }) => {\r\n  const suggestions = [\r\n    \"Should I buy Solana now?\",\r\n    \"What's happening in the crypto market?\",\r\n    \"Should I enter a long position on ETH?\",\r\n    \"Is Bitcoin a good short right now?\",\r\n    \"Should I buy SOL for short term with low risk?\",\r\n    \"Analyze Cardano's price movement for long-term investment\"\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 p-4\">\r\n      {suggestions.map((suggestion, index) => (\r\n        <button \r\n          key={index}\r\n          className=\"bg-gray-900 hover:bg-gray-800 text-left p-3 rounded-lg text-sm text-gray-300 transition-colors\"\r\n          onClick={() => onSuggestionSelect(suggestion)}\r\n        >\r\n          {suggestion}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Message formatting helper\r\nconst formatMessage = (content) => {\r\n  if (!content) return \"No content available\";\r\n  \r\n  // Split by numbered sections with asterisks/numbers\r\n  const parts = content.split(/(\\d\\.\\s\\*\\*.*?\\*\\*:)/g);\r\n  \r\n  if (parts.length > 1) {\r\n    return parts.map((part, index) => {\r\n      // Check if this is a section header\r\n      if (part.match(/\\d\\.\\s\\*\\*.*?\\*\\*:/)) {\r\n        return <div key={index} className=\"font-semibold mt-2\">{part.replace(/\\*\\*/g, '')}</div>;\r\n      }\r\n      // This is section content\r\n      return <div key={index} className=\"mb-2\">{part}</div>;\r\n    });\r\n  }\r\n  \r\n  // Check for Markdown-style bold text\r\n  if (content.includes('**')) {\r\n    return content.split('\\n').map((line, index) => {\r\n      // Replace bold markdown with styled spans\r\n      const processedLine = line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n      return (\r\n        <div \r\n          key={index} \r\n          className=\"mb-1\" \r\n          dangerouslySetInnerHTML={{ __html: processedLine }}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  \r\n  // If no structured format detected, just return the content with line breaks\r\n  return content.split('\\n').map((line, index) => (\r\n    <div key={index} className=\"mb-1\">{line}</div>\r\n  ));\r\n};\r\n\r\n// User Context Form Component\r\n// UserContextForm Component with comprehensive coin support\r\nconst UserContextForm = ({ userContext, setUserContext, onClose }) => {\r\n  const [localContext, setLocalContext] = useState(userContext);\r\n  const [availableCoins, setAvailableCoins] = useState([]);\r\n  const [isLoadingCoins, setIsLoadingCoins] = useState(false);\r\n  const [coinSearchQuery, setCoinSearchQuery] = useState('');\r\n  \r\n  // Update local state when props change\r\n  useEffect(() => {\r\n    setLocalContext(userContext);\r\n  }, [userContext]);\r\n  \r\n  // Load available coins from the backend\r\n  useEffect(() => {\r\n    const fetchAvailableCoins = async () => {\r\n      setIsLoadingCoins(true);\r\n      try {\r\n        // Get list of supported coins from your backend\r\n        const response = await fetch('/api/supported-coins');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch supported coins');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        // If we have coins from API, use them\r\n        if (data.coins && Array.isArray(data.coins) && data.coins.length > 0) {\r\n          setAvailableCoins(data.coins);\r\n          console.log(`Loaded ${data.coins.length} coins from API`);\r\n        } else {\r\n          // Otherwise use our default comprehensive list\r\n          setAvailableCoins(defaultCoinList);\r\n          console.log(\"Using default coin list\");\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching supported coins:', error);\r\n        // Fallback to the most popular coins as a default\r\n        setAvailableCoins(defaultCoinList);\r\n        console.log(\"Using default coin list due to API error\");\r\n      } finally {\r\n        setIsLoadingCoins(false);\r\n      }\r\n    };\r\n    \r\n    fetchAvailableCoins();\r\n  }, []);\r\n  \r\n  // Default comprehensive list of the most popular coins\r\n  const defaultCoinList = [\r\n    'BTC', 'ETH', 'BNB', 'SOL', 'XRP', 'ADA', 'DOGE', 'SHIB', 'DOT', 'MATIC',\r\n    'AVAX', 'LINK', 'UNI', 'LTC', 'ATOM', 'TON', 'NEAR', 'ICP', 'APT', 'BCH',\r\n    'FTM', 'ALGO', 'OP', 'ARB', 'STX', 'HBAR', 'ETC', 'FLOW', 'EGLD', 'ONE',\r\n    'AAVE', 'MKR', 'CRV', 'CAKE', 'COMP', 'SNX', '1INCH', 'YFI', 'SUSHI', 'LDO',\r\n    'SAND', 'MANA', 'AXS', 'ENJ', 'GALA', 'APE', 'RUNE', 'PEPE', 'TIA', 'SUI',\r\n    'FET', 'AST', 'XMR', 'DYDX', 'GRT', 'VET', 'INJ', 'XTZ', 'EOS', 'NEO'\r\n  ];\r\n  \r\n  // Portfolio input field management\r\n  const [portfolioInput, setPortfolioInput] = useState('');\r\n  \r\n  // Filter available coins based on search query\r\n  const filteredCoins = availableCoins.filter(coin => \r\n    coin.includes(coinSearchQuery.toUpperCase())\r\n  ).slice(0, 20); // Limit to 20 results for better UI performance\r\n  \r\n  // Check if the input might be a coin name rather than a symbol\r\n  const getSymbolFromName = (name) => {\r\n    // Check if the input might be a coin name, using our mapping\r\n    const normalizedInput = name.trim().toLowerCase();\r\n    for (const [coinName, symbol] of Object.entries(COIN_NAME_MAPPING)) {\r\n      if (normalizedInput.includes(coinName)) {\r\n        return symbol;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  const addPortfolioCoin = (coin = null) => {\r\n    // Use either the selected coin or the input value\r\n    let coinToAdd = coin || portfolioInput.trim().toUpperCase();\r\n    \r\n    // If no coin was passed and the input might be a name rather than a symbol\r\n    if (!coin && coinToAdd.length > 5) {\r\n      const symbolFromName = getSymbolFromName(coinToAdd);\r\n      if (symbolFromName) {\r\n        coinToAdd = symbolFromName;\r\n      }\r\n    }\r\n    \r\n    if (coinToAdd && !localContext.portfolio.includes(coinToAdd)) {\r\n      setLocalContext({\r\n        ...localContext,\r\n        portfolio: [...localContext.portfolio, coinToAdd]\r\n      });\r\n      setPortfolioInput('');\r\n      setCoinSearchQuery('');\r\n    }\r\n  };\r\n  \r\n  const removePortfolioCoin = (coin) => {\r\n    setLocalContext({\r\n      ...localContext,\r\n      portfolio: localContext.portfolio.filter(c => c !== coin)\r\n    });\r\n  };\r\n  \r\n  const handleSave = () => {\r\n    setUserContext(localContext);\r\n    onClose();\r\n  };\r\n  \r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50\">\r\n      <div className=\"bg-gray-900 text-white rounded-lg p-6 max-w-md w-full mx-4 border border-gray-700\">\r\n        <h2 className=\"text-xl font-bold mb-4 text-orange-500\">Your Investment Profile</h2>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium mb-1 text-gray-300\">Risk Tolerance</label>\r\n          <select \r\n            className=\"w-full p-2 border border-gray-700 rounded bg-gray-800 text-white\"\r\n            value={localContext.risk_tolerance}\r\n            onChange={(e) => setLocalContext({...localContext, risk_tolerance: e.target.value})}\r\n          >\r\n            <option value=\"low\">Low (Conservative)</option>\r\n            <option value=\"medium\">Medium (Balanced)</option>\r\n            <option value=\"high\">High (Aggressive)</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium mb-1 text-gray-300\">Investment Horizon</label>\r\n          <select \r\n            className=\"w-full p-2 border border-gray-700 rounded bg-gray-800 text-white\"\r\n            value={localContext.investment_horizon}\r\n            onChange={(e) => setLocalContext({...localContext, investment_horizon: e.target.value})}\r\n          >\r\n            <option value=\"short\">Short-term (less than 1 year)</option>\r\n            <option value=\"medium\">Medium-term (1-3 years)</option>\r\n            <option value=\"long\">Long-term (more than 3 years)</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium mb-1 text-gray-300\">Your Crypto Portfolio</label>\r\n          \r\n          <div className=\"relative\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search or add coin (e.g., BTC, Bitcoin, Ethereum)\"\r\n              className=\"w-full p-2 border border-gray-700 rounded bg-gray-800 text-white\"\r\n              value={coinSearchQuery || portfolioInput}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setCoinSearchQuery(value.toUpperCase());\r\n                setPortfolioInput(value);\r\n              }}\r\n              onKeyPress={(e) => e.key === 'Enter' && addPortfolioCoin()}\r\n            />\r\n            \r\n            {coinSearchQuery && filteredCoins.length > 0 && (\r\n              <div className=\"absolute z-10 mt-1 w-full max-h-40 overflow-y-auto bg-gray-800 border border-gray-700 rounded\">\r\n                {filteredCoins.map((coin) => (\r\n                  <div \r\n                    key={coin}\r\n                    className=\"p-2 hover:bg-gray-700 cursor-pointer\"\r\n                    onClick={() => {\r\n                      addPortfolioCoin(coin);\r\n                    }}\r\n                  >\r\n                    <span className=\"font-medium\">{coin}</span>\r\n                    {/* Show full name if available */}\r\n                    {getCoinFullName(coin) && (\r\n                      <span className=\"text-xs text-gray-400 ml-2\">\r\n                        {getCoinFullName(coin)}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {isLoadingCoins && (\r\n            <div className=\"text-sm text-gray-500 mt-1\">Loading available coins...</div>\r\n          )}\r\n          \r\n          <div className=\"flex flex-wrap gap-2 mt-3\">\r\n            {localContext.portfolio.map((coin) => (\r\n              <div key={coin} className=\"bg-gray-800 px-2 py-1 rounded flex items-center border border-gray-700\">\r\n                <span className=\"mr-1\">{coin}</span>\r\n                <button \r\n                  onClick={() => removePortfolioCoin(coin)}\r\n                  className=\"text-orange-500 text-xs font-bold\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n            ))}\r\n            {localContext.portfolio.length === 0 && (\r\n              <span className=\"text-gray-500 text-sm\">No coins added yet</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Popular coins quick-add section */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium mb-1 text-gray-300\">Popular Coins</label>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {['BTC', 'ETH', 'SOL', 'BNB', 'XRP', 'DOGE', 'ADA', 'MATIC', 'AVAX', 'LINK'].map((coin) => (\r\n              <button\r\n                key={coin}\r\n                className=\"bg-gray-800 hover:bg-gray-700 text-xs px-2 py-1 rounded border border-gray-700\"\r\n                onClick={() => {\r\n                  if (!localContext.portfolio.includes(coin)) {\r\n                    setLocalContext({\r\n                      ...localContext,\r\n                      portfolio: [...localContext.portfolio, coin]\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                {coin}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end gap-2 mt-4\">\r\n          <button \r\n            onClick={onClose}\r\n            className=\"px-4 py-2 border border-gray-700 rounded text-gray-300 hover:bg-gray-800\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button \r\n            onClick={handleSave}\r\n            className=\"px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700\"\r\n          >\r\n            Save Profile\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to get the full name of a coin from its symbol\r\nconst getCoinFullName = (symbol) => {\r\n  // Create a reverse mapping from symbol to name\r\n  const symbolToName = {};\r\n  \r\n  // Populate the reverse mapping based on our COIN_NAME_MAPPING\r\n  Object.entries(COIN_NAME_MAPPING).forEach(([name, sym]) => {\r\n    // For each symbol, store the longest name (most descriptive)\r\n    if (!symbolToName[sym] || name.length > symbolToName[sym].length) {\r\n      symbolToName[sym] = name;\r\n    }\r\n  });\r\n  \r\n  // Mapping of common symbols to full names\r\n  const fullNames = {\r\n    'BTC': 'Bitcoin',\r\n    'ETH': 'Ethereum',\r\n    'BNB': 'Binance Coin',\r\n    'SOL': 'Solana',\r\n    'XRP': 'XRP (Ripple)',\r\n    'ADA': 'Cardano',\r\n    'DOGE': 'Dogecoin',\r\n    'SHIB': 'Shiba Inu',\r\n    'DOT': 'Polkadot',\r\n    'MATIC': 'Polygon',\r\n    'AVAX': 'Avalanche',\r\n    'LINK': 'Chainlink',\r\n    'UNI': 'Uniswap',\r\n    'LTC': 'Litecoin',\r\n    'ATOM': 'Cosmos',\r\n    'HBAR': 'Hedera',\r\n    'AST': 'AirSwap',\r\n    // Add more mappings as needed\r\n  };\r\n  \r\n  // Use either the reverse-engineered name from COIN_NAME_MAPPING or the hardcoded mapping\r\n  return symbolToName[symbol] ? \r\n    symbolToName[symbol].charAt(0).toUpperCase() + symbolToName[symbol].slice(1) : \r\n    fullNames[symbol] || '';\r\n};\r\n\r\n// Main Chat Component\r\nconst CryptoAnalyzerChat = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showContextForm, setShowContextForm] = useState(false);\r\n  const [userContext, setUserContext] = useState({\r\n    risk_tolerance: \"medium\",\r\n    investment_horizon: \"medium\",\r\n    portfolio: []\r\n  });\r\n  \r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Context extraction function remains the same\r\n  const extractContextFromMessage = (message) => {\r\n    // ... existing logic ...\r\n    const lowerMessage = message.toLowerCase();\r\n    let contextOverride = {};\r\n    \r\n    // Only add risk_tolerance to context if explicitly mentioned in the message\r\n    // Low risk patterns\r\n    if (\r\n      lowerMessage.includes(\"low risk\") || \r\n      lowerMessage.includes(\"conservative\") || \r\n      lowerMessage.includes(\"risk tolerance is low\") || \r\n      lowerMessage.includes(\"risk tolerance is short\") || \r\n      lowerMessage.includes(\"risk is low\") ||\r\n      lowerMessage.includes(\"risk is short\") ||\r\n      lowerMessage.includes(\"minimal risk\") ||\r\n      lowerMessage.includes(\"safe investment\")\r\n    ) {\r\n      contextOverride.risk_tolerance = \"low\";\r\n      console.log(\"Detected LOW risk tolerance from message\");\r\n    } \r\n    // High risk patterns\r\n    else if (\r\n      lowerMessage.includes(\"high risk\") || \r\n      lowerMessage.includes(\"aggressive\") || \r\n      lowerMessage.includes(\"risk tolerance is high\") || \r\n      lowerMessage.includes(\"risk is high\") ||\r\n      lowerMessage.includes(\"risky investment\") ||\r\n      lowerMessage.includes(\"willing to take risk\")\r\n    ) {\r\n      contextOverride.risk_tolerance = \"high\";\r\n      console.log(\"Detected HIGH risk tolerance from message\");\r\n    } \r\n    // Medium risk patterns\r\n    else if (\r\n      lowerMessage.includes(\"medium risk\") || \r\n      lowerMessage.includes(\"moderate risk\") || \r\n      lowerMessage.includes(\"balanced\") || \r\n      lowerMessage.includes(\"risk tolerance is medium\") || \r\n      lowerMessage.includes(\"risk tolerance is moderate\") ||\r\n      lowerMessage.includes(\"risk is medium\") ||\r\n      lowerMessage.includes(\"risk is moderate\")\r\n    ) {\r\n      contextOverride.risk_tolerance = \"medium\";\r\n      console.log(\"Detected MEDIUM risk tolerance from message\");\r\n    }\r\n    \r\n    // Only add investment_horizon to context if explicitly mentioned in the message\r\n    // Short term patterns\r\n    if (\r\n      lowerMessage.includes(\"short term\") || \r\n      lowerMessage.includes(\"short-term\") ||\r\n      lowerMessage.includes(\"short investment\") ||\r\n      lowerMessage.includes(\"quick trade\") ||\r\n      lowerMessage.includes(\"near term\") ||\r\n      lowerMessage.includes(\"immediate\") ||\r\n      lowerMessage.includes(\"day trade\") ||\r\n      lowerMessage.includes(\"swing trade\")\r\n    ) {\r\n      contextOverride.investment_horizon = \"short\";\r\n      console.log(\"Detected SHORT term horizon from message\");\r\n    } \r\n    // Long term patterns\r\n    else if (\r\n      lowerMessage.includes(\"long term\") || \r\n      lowerMessage.includes(\"long-term\") ||\r\n      lowerMessage.includes(\"long investment\") ||\r\n      lowerMessage.includes(\"hold for years\") ||\r\n      lowerMessage.includes(\"hodl\") ||\r\n      lowerMessage.includes(\"invest for the future\")\r\n    ) {\r\n      contextOverride.investment_horizon = \"long\";\r\n      console.log(\"Detected LONG term horizon from message\");\r\n    } \r\n    // Medium term patterns\r\n    else if (\r\n      lowerMessage.includes(\"medium term\") || \r\n      lowerMessage.includes(\"medium-term\") ||\r\n      lowerMessage.includes(\"mid term\") ||\r\n      lowerMessage.includes(\"mid-term\") ||\r\n      lowerMessage.includes(\"intermediate\") ||\r\n      lowerMessage.includes(\"few months\")\r\n    ) {\r\n      contextOverride.investment_horizon = \"medium\";\r\n      console.log(\"Detected MEDIUM term horizon from message\");\r\n    }\r\n    \r\n    console.log(\"Context extracted from message:\", contextOverride);\r\n    return contextOverride;\r\n  };\r\n\r\n  // Other utility functions remain the same\r\n  const isFuturesQuery = (queryText) => {\r\n    const futuresPatterns = [\r\n      /\\blong position\\b/i,\r\n      /\\bshort position\\b/i,\r\n      /\\bgo long\\b/i,\r\n      /\\bgo short\\b/i,\r\n      /\\benter a long\\b/i,\r\n      /\\benter a short\\b/i,\r\n      /\\bfutures\\b/i,\r\n      /\\bleveraged\\b/i,\r\n      /\\blonging\\b/i,\r\n      /\\bshorting\\b/i\r\n    ];\r\n    \r\n    return futuresPatterns.some(pattern => pattern.test(queryText));\r\n  };\r\n\r\n  // Comprehensive name-to-symbol mapping for improved user experience\r\n\r\n\r\n  const extractCoin = (queryText) => {\r\n    /**\r\n     * Enhanced function to extract coin symbols from user messages\r\n     * @param {string} queryText - The user's query text\r\n     * @return {string} The extracted coin symbol or default \"BTC\"\r\n     */\r\n    // Normalize query text\r\n    const queryLower = queryText.toLowerCase();\r\n    \r\n    // Import the comprehensive coin mapping defined above\r\n    // This is the same mapping we've defined in the COIN_NAME_MAPPING constant\r\n    \r\n    // First check for exact symbol matches (case insensitive)\r\n    for (const [name, symbol] of Object.entries(COIN_NAME_MAPPING)) {\r\n        // Check each name->symbol mapping\r\n        if (queryLower.includes(name)) {\r\n            console.log(`Detected coin ${symbol} from name \"${name}\"`);\r\n            return symbol;\r\n        }\r\n    }\r\n    \r\n    // Direct symbol detection for common coins\r\n    // This helps catch symbols not in our mapping\r\n    const commonCoins = [\r\n        'BTC', 'ETH', 'SOL', 'ADA', 'XRP', 'DOT', 'DOGE', 'AVAX', 'MATIC',\r\n        'LINK', 'UNI', 'LTC', 'ATOM', 'HBAR', 'AST', 'BNB', 'SHIB', 'NEAR',\r\n        'TON', 'SUI', 'TIA', 'FET', 'APT', 'ARB', 'OP', 'IMX', 'AAVE'\r\n    ];\r\n    \r\n    for (const coin of commonCoins) {\r\n        const regex = new RegExp(`\\\\b${coin.toLowerCase()}\\\\b`, 'i');\r\n        if (regex.test(queryLower)) {\r\n            console.log(`Detected coin ${coin} from direct symbol mention`);\r\n            return coin;\r\n        }\r\n    }\r\n    \r\n    // If we reach here and still don't have a match, use a more general context check\r\n    // This is for phrases like \"current bitcoin price\" where the coin is mentioned indirectly\r\n    const contextPatterns = [\r\n        { pattern: /\\bbtc\\b|\\bbitcoin\\b/i, symbol: 'BTC' },\r\n        { pattern: /\\beth\\b|\\bethereum\\b/i, symbol: 'ETH' },\r\n        { pattern: /\\bsol\\b|\\bsolana\\b/i, symbol: 'SOL' },\r\n        { pattern: /\\bhbar\\b|\\bhedera\\b/i, symbol: 'HBAR' },\r\n        { pattern: /\\bast\\b|\\bairswap\\b/i, symbol: 'AST' },\r\n        { pattern: /\\bbnb\\b|\\bbinance\\b/i, symbol: 'BNB' }\r\n    ];\r\n    \r\n    for (const { pattern, symbol } of contextPatterns) {\r\n        if (pattern.test(queryLower)) {\r\n            console.log(`Detected coin ${symbol} from context pattern`);\r\n            return symbol;\r\n        }\r\n    }\r\n\r\n    // Check for intent-based coin detection\r\n    // This helps with queries like \"should I buy a good defi token\"\r\n    const intentBasedPatterns = [\r\n        { intent: /\\bdefi\\b|\\byield\\b|\\blending\\b|\\bliquidity\\b/i, suggestions: ['AAVE', 'UNI', 'COMP', 'MKR', 'CRV'] },\r\n        { intent: /\\bgaming\\b|\\bmetaverse\\b|\\bnft\\b/i, suggestions: ['SAND', 'MANA', 'AXS', 'ENJ', 'GALA'] },\r\n        { intent: /\\blayer\\s*2\\b|\\bscaling\\b|\\bl2\\b/i, suggestions: ['MATIC', 'ARB', 'OP', 'IMX'] },\r\n        { intent: /\\bmeme\\b|\\bmemes\\b/i, suggestions: ['DOGE', 'SHIB', 'PEPE', 'BONK', 'WIF'] },\r\n        { intent: /\\bstablecoin\\b/i, suggestions: ['USDT', 'USDC', 'DAI', 'BUSD'] },\r\n        { intent: /\\bsmart\\s*contract\\b|\\bplatform\\b/i, suggestions: ['ETH', 'SOL', 'ADA', 'DOT', 'AVAX'] },\r\n        { intent: /\\bprivacy\\b|\\banonymous\\b/i, suggestions: ['XMR', 'ZEC', 'DASH'] }\r\n    ];\r\n\r\n    for (const { intent, suggestions } of intentBasedPatterns) {\r\n        if (intent.test(queryLower)) {\r\n            const selected = suggestions[0]; // Default to first suggestion\r\n            console.log(`Detected intent for ${selected} based on query context`);\r\n            return selected;\r\n        }\r\n    }\r\n\r\n    // If no specific coin detected, default to BTC\r\n    console.log(\"No specific coin detected, defaulting to BTC\");\r\n    return 'BTC';\r\n};\r\n\r\n  const extractFuturesDirection = (queryText) => {\r\n    // ... existing function ...\r\n    const queryLower = queryText.toLowerCase();\r\n    \r\n    // Check for long patterns\r\n    if (/long|buy|bull/i.test(queryLower) && !/short|sell|bear/i.test(queryLower)) {\r\n      return 'long';\r\n    }\r\n    \r\n    // Check for short patterns\r\n    if (/short|sell|bear/i.test(queryLower) && !/long|buy|bull/i.test(queryLower)) {\r\n      return 'short';\r\n    }\r\n    \r\n    // Default to \"long\" if direction not clear\r\n    return 'long';\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e?.preventDefault();\r\n    \r\n    if (!query.trim()) return;\r\n\r\n    // New function to check if query is crypto-related\r\n  const isCryptoRelatedQuery = (queryText) => {\r\n    const cryptoKeywords = [\r\n      'bitcoin', 'crypto', 'blockchain', 'ethereum', \r\n      'trading', 'market', 'coin', 'investment', \r\n      'solana', 'xrp', 'buy', 'sell', 'portfolio',\r\n      'futures', 'long', 'short', 'price', 'trend'\r\n    ];\r\n    \r\n    const queryLower = queryText.toLowerCase();\r\n    \r\n    return cryptoKeywords.some(keyword => queryLower.includes(keyword));\r\n  };\r\n\r\n  // Check if query is crypto-related\r\n  if (!isCryptoRelatedQuery(query)) {\r\n    // Add a clarification message\r\n    const clarificationMessage = {\r\n      type: 'ai',\r\n      content: `I'm an AI specialized in cryptocurrency and market analysis. Could you rephrase your query to be about crypto markets, trading, or specific cryptocurrencies? \r\n\r\nSome example queries:\r\n- Should I buy Bitcoin?\r\n- What's happening with Ethereum?\r\n- Analyze Solana's price movement\r\n- Give me a futures trading recommendation\r\n\r\nI can help you with:\r\n✓ Cryptocurrency analysis\r\n✓ Trading recommendations\r\n✓ Market sentiment\r\n✓ Futures trading insights`,\r\n      coin: 'Assistant',\r\n      intent: 'Clarification',\r\n      actionColor: 'blue',\r\n      timestamp: new Date().toLocaleString()\r\n    };\r\n\r\n    // Add user and AI messages\r\n    setMessages(prev => [\r\n      ...prev, \r\n      { \r\n        type: 'user', \r\n        content: query,\r\n        timestamp: new Date().toLocaleString()\r\n      },\r\n      clarificationMessage\r\n    ]);\r\n\r\n    // Reset query and loading state\r\n    setQuery('');\r\n    setIsLoading(false);\r\n    return;\r\n  }\r\n    \r\n    console.log(\"===============================\");\r\n    console.log(\"Processing query:\", query);\r\n  \r\n    // Add user message\r\n    const userMessage = { \r\n      type: 'user', \r\n      content: query,\r\n      timestamp: new Date().toLocaleString()\r\n    };\r\n    setMessages(prev => [...prev, userMessage]);\r\n  \r\n    // Extract any context information from the message\r\n    const contextOverride = extractContextFromMessage(query);\r\n    \r\n    // Only use the context explicitly mentioned in the message\r\n    let requestContext = {};\r\n    \r\n    // Only if user explicitly mentioned context, send it\r\n    if (Object.keys(contextOverride).length > 0) {\r\n      requestContext = contextOverride;\r\n      console.log(\"Using message-specific context:\", requestContext);\r\n    } else {\r\n      console.log(\"No context mentioned in message, not sending any context information\");\r\n    }\r\n  \r\n    // Merge context for display purposes\r\n    const messageContext = {\r\n      ...userContext,\r\n      ...contextOverride\r\n    };\r\n    \r\n    console.log(\"Profile context:\", userContext);\r\n    console.log(\"Message context override:\", contextOverride);\r\n    console.log(\"Final context for request:\", messageContext);\r\n  \r\n    // Determine if this is a futures trading query\r\n    const isFutures = isFuturesQuery(query);\r\n    let apiEndpoint, requestOptions, messageType;\r\n    \r\n    if (isFutures) {\r\n      // Extract coin and direction for futures trading\r\n      const coin = extractCoin(query);\r\n      const direction = extractFuturesDirection(query);\r\n      \r\n      // Create URL with query parameters\r\n      const params = new URLSearchParams({\r\n        action_type: 'futures',\r\n        position: direction, // Add position parameter\r\n        force_refresh: 'true' // Force refresh to avoid caching issues\r\n      });\r\n      \r\n      apiEndpoint = `/recommendation/${coin}?${params.toString()}`;\r\n      \r\n      requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      \r\n      messageType = direction === 'long' ? 'LONG' : 'SHORT';\r\n      console.log(`Making futures ${direction} request for ${coin}`);\r\n    } else {\r\n      // Standard analysis query\r\n      apiEndpoint = '/analyze';\r\n      \r\n      // Create request body with explicit context\r\n      const requestBody = {\r\n        message: query,\r\n        context: requestContext   // Use the context with message-specific overrides\r\n      };\r\n      \r\n      console.log(\"Making API call to:\", apiEndpoint);\r\n      console.log(\"Request body:\", JSON.stringify(requestBody, null, 2));\r\n      \r\n      requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n      };\r\n      messageType = 'analysis';\r\n    }\r\n  \r\n    setIsLoading(true);\r\n    setQuery('');\r\n  \r\n    try {\r\n      const response = await fetch(apiEndpoint, requestOptions);\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Request failed');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log(\"API Response:\", JSON.stringify(data, null, 2));\r\n      \r\n      // Check if the context in the response matches what we sent\r\n      if (data.context) {\r\n        console.log(\"Context match check:\");\r\n        console.log(\"- Expected risk_tolerance:\", messageContext.risk_tolerance);\r\n        console.log(\"- Received risk_tolerance:\", data.context.risk_tolerance);\r\n        console.log(\"- Expected investment_horizon:\", messageContext.investment_horizon);\r\n        console.log(\"- Received investment_horizon:\", data.context.investment_horizon);\r\n      }\r\n  \r\n      // Format response based on endpoint type\r\n      let aiMessage;\r\n      \r\n      if (isFutures) {\r\n        // Extract coin and direction for futures trading\r\n        const coin = extractCoin(query);\r\n        const direction = extractFuturesDirection(query);\r\n        \r\n        // Format recommendation using the new helper function\r\n        const formatFuturesRecommendation = (data, direction) => {\r\n          // Get the appropriate action label based on direction and API's action recommendation\r\n          let actionLabel;\r\n          let summary;\r\n          let recommendationColor;\r\n          \r\n          // For LONG positions\r\n          if (direction === 'long') {\r\n            if (data.action === 'BUY') {\r\n              actionLabel = 'ENTER LONG';\r\n              summary = `RECOMMENDED to enter a long position on ${data.coin}`;\r\n              recommendationColor = 'green';\r\n            } else if (data.action === 'SELL') {\r\n              actionLabel = 'AVOID LONG';\r\n              summary = `NOT RECOMMENDED to go long on ${data.coin} at this time`;\r\n              recommendationColor = 'yellow';\r\n            } else {\r\n              actionLabel = 'NEUTRAL';\r\n              summary = `NEUTRAL outlook for ${data.coin} long position`;\r\n              recommendationColor = 'gray';\r\n            }\r\n          } \r\n          // For SHORT positions\r\n          else if (direction === 'short') {\r\n            if (data.action === 'SELL') {\r\n              actionLabel = 'ENTER SHORT';\r\n              summary = `RECOMMENDED to enter a short position on ${data.coin}`;\r\n              recommendationColor = 'red';\r\n            } else if (data.action === 'BUY') {\r\n              actionLabel = 'AVOID SHORT';\r\n              summary = `NOT RECOMMENDED to short ${data.coin} at this time`;\r\n              recommendationColor = 'yellow';\r\n            } else {\r\n              actionLabel = 'NEUTRAL';\r\n              summary = `NEUTRAL outlook for ${data.coin} short position`;\r\n              recommendationColor = 'gray';\r\n            }\r\n          }\r\n          \r\n          // Get explanation from available fields\r\n          const explanation = data.explanation || data.analysis || data.summary || \"No detailed analysis available.\";\r\n          \r\n          // Format the content for display\r\n          return {\r\n            label: actionLabel,\r\n            content: `**${actionLabel}** - ${summary}\\n\\n${explanation}`,\r\n            color: recommendationColor\r\n          };\r\n        };\r\n        \r\n        const recommendation = formatFuturesRecommendation(data, direction);\r\n        \r\n        // Format recommendation response\r\n        aiMessage = {\r\n          type: 'ai',\r\n          content: recommendation.content,\r\n          coin: data.coin || extractCoin(query),\r\n          intent: messageType,\r\n          direction: direction,\r\n          action: recommendation.label,\r\n          actionColor: recommendation.color,\r\n          context: messageContext,\r\n          timestamp: new Date().toLocaleString()\r\n        };\r\n      } else {\r\n        // Format analysis response\r\n        aiMessage = {\r\n          type: 'ai',\r\n          content: data.response,\r\n          coin: data.detected_coin || 'Market',\r\n          intent: data.detected_intent || 'Analysis',\r\n          // Use the context from the API response if available, otherwise use our calculated context\r\n          context: data.context || messageContext,\r\n          actionColor: 'blue', \r\n          timestamp: new Date(data.timestamp * 1000).toLocaleString()\r\n        };\r\n      }\r\n      \r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      const errorMessage = {\r\n        type: 'error',\r\n        content: 'Sorry, something went wrong. Please try again.',\r\n        timestamp: new Date().toLocaleString()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Format context for display\r\n  const formatContext = (context) => {\r\n    if (!context) return \"\";\r\n    \r\n    const riskMap = {\r\n      \"low\": \"low risk\",\r\n      \"medium\": \"medium risk\",\r\n      \"high\": \"high risk\"\r\n    };\r\n    \r\n    const horizonMap = {\r\n      \"short\": \"short-term\",\r\n      \"medium\": \"medium-term\",\r\n      \"long\": \"long-term\"\r\n    };\r\n    \r\n    return `(${riskMap[context.risk_tolerance] || context.risk_tolerance}, ${horizonMap[context.investment_horizon] || context.investment_horizon})`;\r\n  };\r\n  \r\n  return (\r\n    <div className=\"flex flex-col h-screen w-full bg-black text-white shadow-lg\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center p-4 border-b border-gray-800\">\r\n        <a href=\"/landing.html\" className=\"text-2xl font-bold text-orange-500 cursor-pointer hover:text-orange-400\">AionX</a>\r\n        <div className=\"flex items-center\">\r\n          <button \r\n            onClick={() => setShowContextForm(true)}\r\n            className=\"flex items-center text-sm text-gray-400 hover:text-orange-500 mr-4\"\r\n          >\r\n            <Settings size={16} className=\"mr-1\" />\r\n            Profile\r\n          </button>\r\n          <div className=\"text-sm text-gray-500\">Powered by DeepSeek</div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Messages Area */}\r\n      <div className=\"flex-grow overflow-y-auto p-4 space-y-4\" style={{backgroundImage: 'radial-gradient(circle at 10% 20%, rgba(50, 50, 50, 0.2) 0%, rgba(20, 20, 20, 0.2) 90%)', backgroundAttachment: 'fixed'}}>\r\n        <div className=\"max-w-6xl mx-auto w-full\">\r\n          {messages.length === 0 ? (\r\n            <>\r\n              <div className=\"mb-8 text-center\">\r\n                <h2 className=\"text-3xl font-bold mb-2 text-orange-500\">Welcome to AionX</h2>\r\n                <p className=\"text-gray-300 mb-4\">\r\n                  Get AI-powered cryptocurrency analysis and trading recommendations\r\n                </p>\r\n                <div className=\"text-sm text-gray-400 mb-4\">\r\n                  <div>Your profile: {userContext.risk_tolerance} risk, {userContext.investment_horizon}-term horizon</div>\r\n                  {userContext.portfolio.length > 0 && (\r\n                    <div>Portfolio: {userContext.portfolio.join(', ')}</div>\r\n                  )}\r\n                </div>\r\n                <p className=\"text-sm text-gray-500 italic\">\r\n                  Tip: You can mention risk tolerance and time horizon in your query, like \"give me a recommendation for SOL with low risk and short term\"\r\n                </p>\r\n              </div>\r\n              <Suggestions onSuggestionSelect={(suggestion) => {\r\n                setQuery(suggestion);\r\n                handleSubmit({ preventDefault: () => {} });\r\n              }} />\r\n            </>\r\n          ) : (\r\n            // In the messages mapping section of the render method\r\nmessages.map((message, index) => (\r\n  <div \r\n    key={index} \r\n    className={`flex ${\r\n      message.type === 'user' \r\n        ? 'justify-end' \r\n        : 'justify-start'\r\n    }`}\r\n  >\r\n    <div \r\n      className={`max-w-[85%] p-3 rounded-lg ${\r\n        message.type === 'user'\r\n          ? 'bg-gray-800 border border-gray-700 text-white'\r\n          : message.type === 'error'\r\n          ? 'bg-gray-800 border border-gray-700 text-red-400'\r\n          : 'bg-gray-800 border border-gray-700'\r\n      }`}\r\n    >\r\n      {message.type === 'ai' && (\r\n        <div className=\"text-sm font-semibold mb-1 text-white\">\r\n          {message.coin} {message.intent === 'LONG' || message.intent === 'SHORT' \r\n            ? `${message.intent} Recommendation` \r\n            : message.intent && message.intent !== 'general' \r\n            ? message.intent.toUpperCase() \r\n            : 'Analysis'}\r\n          {message.context && (\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              {formatContext(message.context)}\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"text-sm whitespace-pre-wrap\">\r\n        {message.type === 'ai' \r\n          ? formatMessage(message.content) \r\n          : message.content}\r\n      </div>\r\n      \r\n      <div className=\"text-xs text-gray-500 mt-2 text-right\">\r\n        {/* {message.timestamp} */}\r\n      </div>\r\n    </div>\r\n  </div>\r\n))\r\n          )}\r\n          \r\n          {/* Loading indicator */}\r\n          {isLoading && (\r\n            <div className=\"flex justify-center items-center p-4\">\r\n              <div className=\"loader w-8 h-8 border-4 border-gray-700 border-t-orange-500 rounded-full animate-spin\"></div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <form \r\n        onSubmit={handleSubmit} \r\n        className=\"p-4 border-t border-gray-800\"\r\n      >\r\n        <div className=\"max-w-6xl mx-auto w-full flex items-center space-x-2\">\r\n          <input \r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder=\"Ask about cryptocurrency markets or futures positions...\"\r\n            disabled={isLoading}\r\n            className=\"flex-grow p-3 bg-gray-900 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 border border-gray-700\"\r\n          />\r\n          <button \r\n            type=\"submit\" \r\n            disabled={isLoading || !query.trim()}\r\n            className=\"bg-orange-600 text-white p-3 rounded-lg hover:bg-orange-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            <Send size={20} />\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* User Context Form Modal */}\r\n      {showContextForm && (\r\n        <UserContextForm \r\n          userContext={userContext}\r\n          setUserContext={setUserContext}\r\n          onClose={() => setShowContextForm(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoAnalyzerChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}